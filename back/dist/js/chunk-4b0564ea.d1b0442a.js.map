{"version":3,"sources":["webpack:///./src/components/parts/Editor/Editor.vue?de95","webpack:///src/components/parts/Editor/Editor.vue","webpack:///./src/components/parts/Editor/Editor.vue?0fce","webpack:///./src/components/parts/Editor/Editor.vue","webpack:///./node_modules/_core-js@3.6.4@core-js/modules/es.array.index-of.js","webpack:///./node_modules/_wangeditor@3.1.1@wangeditor/release/wangEditor.js","webpack:///./src/components/parts/Editor/Editor.vue?c5d1"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","id","staticRenderFns","name","props","type","String","default","defaultText","menus","Array","uploadPath","params","Object","zIndex","Number","data","fixedMunes","fontNames","methods","mounted","editor","customConfig","showLinkImg","uploadImgServer","uploadImgShowBase64","debug","location","href","indexOf","onchange","onfocus","onblur","uploadFileName","uploadImgMaxLength","uploadImgMaxSize","uploadImgParams","uploadImgHooks","before","customInsert","insertImg","url","setTimeout","create","txt","html","component","$","$indexOf","arrayMethodIsStrict","arrayMethodUsesToLength","nativeIndexOf","NEGATIVE_ZERO","STRICT_METHOD","USES_TO_LENGTH","ACCESSORS","1","target","proto","forced","searchElement","apply","arguments","length","undefined","global","factory","module","exports","polyfill","assign","varArgs","TypeError","to","index","nextSource","nextKey","prototype","hasOwnProperty","call","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","document","ownerDocument","querySelectorAll","i","item","createElemByHTML","div","createElement","innerHTML","children","isDOMList","selector","HTMLCollection","NodeList","result","eventList","DomElement","nodeType","selectorResult","replace","trim","constructor","forEach","fn","elem","clone","deep","cloneList","push","cloneNode","get","first","last","on","types","split","addEventListener","e","off","removeEventListener","attr","key","val","getAttribute","setAttribute","addClass","className","arr","filter","join","removeClass","css","currentStyle","style","styleArr","resultArr","map","show","hide","childNodes","append","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","value","focus","parentUntil","_currentElem","results","equal","$elem","insertBefore","$referenceNode","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","config","colors","emotions","title","content","alt","src","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","linkImgCallback","uploadImgHeaders","withCredentials","uploadImgTimeout","xhr","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","reg","test","isIE","window","objForEach","obj","arrForEach","fakeArr","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","_active","onClick","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","_emptyFn","DropList","menu","opt","_this","$container","$title","titleHtml","list","$list","elemHtml","$li","hideTimeoutId","_rendered","_show","Head","droplist","width","_command","FontSize","FontName","fontName","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","needToHide","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","$selectionELem","selectionText","checkResult","alert","$parent","$targetELem","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$trParent","$currentTd","toLowerCase","newTd","$table","textValId","width30","width50","width100","delBtn","tabsConfig","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","$file","fileElem","click","fileList","$linkUrl","insertLinkImg","tabsConfigResult","customUploadImg","FileReader","MenuConstructors","Menus","getPasteText","clipboardData","originalEvent","pasteText","getData","getPasteHtml","filterStyle","ignoreImg","pasteHtml","docSplitHtml","getPasteImgs","items","getAsFile","getChildrenJSON","curElem","elemResult","textContent","tag","attrData","attrList","attributes","attrListLength","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","configMenus","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","pHandle","codeHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","keyCode","txtHtml","pasteTime","canDo","now","Date","flag","resetTime","ex","pasteFiles","img","$document","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","UploadImg","_alert","alertInfo","debugInfo","customAlert","Error","onload","callback","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","errno","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","editorId","Editor","toolbarSelector","textSelector","_initConfig","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","currentHtml","_offAllEvent","inlinecss","getElementsByTagName","wangEditor"],"mappings":"gHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,SAASC,MAAM,CAAC,GAAKP,EAAIQ,OAC3IC,EAAkB,G,iECMtB,GACEC,KAAM,SACNC,MAAO,CAELH,GAAI,CACFI,KAAMC,OACNC,QAAS,UAGXC,YAAa,CACXH,KAAMC,OACNC,QAAS,IAGXE,MAAO,CACLJ,KAAMK,MACNH,QAAS,WAAf,WAGII,WAAY,CACVN,KAAMC,OACNC,QAAS,eAGXK,OAAQ,CACNP,KAAMQ,OACNN,QAAS,MAGXO,OAAQ,CACNT,KAAMU,OACNR,QAAS,MAGbS,KAlCF,WAmCI,MAAO,CAELC,WAAY,CAClB,OACM,OACA,WACA,WACA,SACA,YACA,gBACA,YACA,YACA,UACA,OACA,OACA,QACN,QAGMC,UAAW,CACjB,KACA,OACA,QACA,SACA,aAIEC,QAAS,GACTC,QAhEF,WAgEA,WACI1B,KAAK2B,OAAS,IAAI,EAAtB,uBAGI3B,KAAK2B,OAAOC,aAAab,MAAQ,GAArC,mEAGIf,KAAK2B,OAAOC,aAAaC,aAAc,EAEnC7B,KAAKiB,WAEPjB,KAAK2B,OAAOC,aAAaE,gBAAkB9B,KAAKiB,WAEhDjB,KAAK2B,OAAOC,aAAaG,qBAAsB,EAGjD/B,KAAK2B,OAAOC,aAAaI,MAAQC,SAASC,KAAKC,QAAQ,2BAA6B,EAGpFnC,KAAK2B,OAAOC,aAAaQ,SAAW,WAClC,EAAN,gCAIIpC,KAAK2B,OAAOC,aAAaS,QAAU,WACjC,EAAN,+BAIIrC,KAAK2B,OAAOC,aAAaU,OAAS,WAChC,EAAN,8BAIItC,KAAK2B,OAAOC,aAAaJ,UAAYxB,KAAKwB,UAE1CxB,KAAK2B,OAAOC,aAAaW,eAAiB,OAG1CvC,KAAK2B,OAAOC,aAAaY,mBAAqB,EAG9CxC,KAAK2B,OAAOC,aAAaa,iBAAmB,QAG5CzC,KAAK2B,OAAOC,aAAac,gBAAkB1C,KAAKkB,OAGhDlB,KAAK2B,OAAOC,aAAae,eAAiB,CAExCC,OAAQ,SAAd,SAKMC,aAAc,SAApB,OACQ,IAAR,eACQC,EAAUC,GACVC,YAAW,cAEnB,OAKIhD,KAAK2B,OAAOsB,SAGZjD,KAAK2B,OAAOuB,IAAIC,KAAKnD,KAAKc,aAG1Bd,KAAK2B,OAAOC,aAAaR,OAASpB,KAAKoB,SC9Iua,I,wBCQ9cgC,EAAY,eACd,EACAtD,EACAU,GACA,EACA,KACA,WACA,MAIa,OAAA4C,E,2CClBf,IAAIC,EAAI,EAAQ,QACZC,EAAW,EAAQ,QAA+BnB,QAClDoB,EAAsB,EAAQ,QAC9BC,EAA0B,EAAQ,QAElCC,EAAgB,GAAGtB,QAEnBuB,IAAkBD,GAAiB,EAAI,CAAC,GAAGtB,QAAQ,GAAI,GAAK,EAC5DwB,EAAgBJ,EAAoB,WACpCK,EAAiBJ,EAAwB,UAAW,CAAEK,WAAW,EAAMC,EAAG,IAI9ET,EAAE,CAAEU,OAAQ,QAASC,OAAO,EAAMC,OAAQP,IAAkBC,IAAkBC,GAAkB,CAC9FzB,QAAS,SAAiB+B,GACxB,OAAOR,EAEHD,EAAcU,MAAMnE,KAAMoE,YAAc,EACxCd,EAAStD,KAAMkE,EAAeE,UAAUC,OAAS,EAAID,UAAU,QAAKE,O,wBCnB3E,SAAUC,EAAQC,GAC6CC,EAAOC,QAAUF,KADjF,CAIExE,GAAM,WAAe,aAMvB,IAAI2E,EAAW,WAGiB,mBAAjBxD,OAAOyD,SACdzD,OAAOyD,OAAS,SAAUb,EAAQc,GAE9B,GAAc,MAAVd,EAEA,MAAM,IAAIe,UAAU,8CAKxB,IAFA,IAAIC,EAAK5D,OAAO4C,GAEPiB,EAAQ,EAAGA,EAAQZ,UAAUC,OAAQW,IAAS,CACnD,IAAIC,EAAab,UAAUY,GAE3B,GAAkB,MAAdC,EAEA,IAAK,IAAIC,KAAWD,EAEZ9D,OAAOgE,UAAUC,eAAeC,KAAKJ,EAAYC,KACjDH,EAAGG,GAAWD,EAAWC,IAKzC,OAAOH,IAKVO,QAAQH,UAAUI,UACnBD,QAAQH,UAAUI,QAAUD,QAAQH,UAAUK,iBAAmBF,QAAQH,UAAUM,oBAAsBH,QAAQH,UAAUO,mBAAqBJ,QAAQH,UAAUQ,kBAAoBL,QAAQH,UAAUS,uBAAyB,SAAUC,GACvO,IAAIN,GAAWvF,KAAK8F,UAAY9F,KAAK+F,eAAeC,iBAAiBH,GACjEI,EAAIV,EAAQlB,OAChB,QAAS4B,GAAK,GAAKV,EAAQW,KAAKD,KAAOjG,MACvC,OAAOiG,GAAK,KAUxB,SAASE,EAAiBhD,GACtB,IAAIiD,OAAM,EAGV,OAFAA,EAAMN,SAASO,cAAc,OAC7BD,EAAIE,UAAYnD,EACTiD,EAAIG,SAIf,SAASC,EAAUC,GACf,QAAKA,IAGDA,aAAoBC,gBAAkBD,aAAoBE,UAOlE,SAASX,EAAiBS,GACtB,IAAIG,EAASd,SAASE,iBAAiBS,GACvC,OAAID,EAAUI,GACHA,EAEA,CAACA,GAKhB,IAAIC,EAAY,GAGhB,SAASC,EAAWL,GAChB,GAAKA,EAAL,CAKA,GAAIA,aAAoBK,EACpB,OAAOL,EAGXzG,KAAKyG,SAAWA,EAChB,IAAIM,EAAWN,EAASM,SAGpBC,EAAiB,GACJ,IAAbD,EAEAC,EAAiB,CAACP,GACE,IAAbM,EAEPC,EAAiB,CAACP,GACXD,EAAUC,IAAaA,aAAoBzF,MAElDgG,EAAiBP,EACU,kBAAbA,IAEdA,EAAWA,EAASQ,QAAQ,SAAU,IAAIC,OAGtCF,EAF0B,IAA1BP,EAAStE,QAAQ,KAEAgE,EAAiBM,GAGjBT,EAAiBS,IAI1C,IAAIpC,EAAS2C,EAAe3C,OAC5B,IAAKA,EAED,OAAOrE,KAIX,IAAIiG,OAAI,EACR,IAAKA,EAAI,EAAGA,EAAI5B,EAAQ4B,IACpBjG,KAAKiG,GAAKe,EAAef,GAE7BjG,KAAKqE,OAASA,GAuYlB,SAAShB,EAAEoD,GACP,OAAO,IAAIK,EAAWL,GApY1BK,EAAW3B,UAAY,CACnBgC,YAAaL,EAGbM,QAAS,SAAiBC,GACtB,IAAIpB,OAAI,EACR,IAAKA,EAAI,EAAGA,EAAIjG,KAAKqE,OAAQ4B,IAAK,CAC9B,IAAIqB,EAAOtH,KAAKiG,GACZW,EAASS,EAAGhC,KAAKiC,EAAMA,EAAMrB,GACjC,IAAe,IAAXW,EACA,MAGR,OAAO5G,MAIXuH,MAAO,SAAeC,GAClB,IAAIC,EAAY,GAIhB,OAHAzH,KAAKoH,SAAQ,SAAUE,GACnBG,EAAUC,KAAKJ,EAAKK,YAAYH,OAE7BnE,EAAEoE,IAIbG,IAAK,SAAa5C,GACd,IAAIX,EAASrE,KAAKqE,OAIlB,OAHIW,GAASX,IACTW,GAAgBX,GAEbhB,EAAErD,KAAKgF,KAIlB6C,MAAO,WACH,OAAO7H,KAAK4H,IAAI,IAIpBE,KAAM,WACF,IAAIzD,EAASrE,KAAKqE,OAClB,OAAOrE,KAAK4H,IAAIvD,EAAS,IAI7B0D,GAAI,SAAYpH,EAAM8F,EAAUY,GAEvBA,IACDA,EAAKZ,EACLA,EAAW,MAIf,IAAIuB,EAAQ,GAGZ,OAFAA,EAAQrH,EAAKsH,MAAM,OAEZjI,KAAKoH,SAAQ,SAAUE,GAC1BU,EAAMZ,SAAQ,SAAUzG,GACfA,IAKLkG,EAAUa,KAAK,CACXJ,KAAMA,EACN3G,KAAMA,EACN0G,GAAIA,IAGHZ,EAOLa,EAAKY,iBAAiBvH,GAAM,SAAUwH,GAClC,IAAIpE,EAASoE,EAAEpE,OACXA,EAAOwB,QAAQkB,IACfY,EAAGhC,KAAKtB,EAAQoE,MARpBb,EAAKY,iBAAiBvH,EAAM0G,WAgB5Ce,IAAK,SAAazH,EAAM0G,GACpB,OAAOrH,KAAKoH,SAAQ,SAAUE,GAC1BA,EAAKe,oBAAoB1H,EAAM0G,OAKvCiB,KAAM,SAAcC,EAAKC,GACrB,OAAW,MAAPA,EAEOxI,KAAK,GAAGyI,aAAaF,GAGrBvI,KAAKoH,SAAQ,SAAUE,GAC1BA,EAAKoB,aAAaH,EAAKC,OAMnCG,SAAU,SAAkBC,GACxB,OAAKA,EAGE5I,KAAKoH,SAAQ,SAAUE,GAC1B,IAAIuB,OAAM,EACNvB,EAAKsB,WAELC,EAAMvB,EAAKsB,UAAUX,MAAM,MAC3BY,EAAMA,EAAIC,QAAO,SAAU5C,GACvB,QAASA,EAAKgB,UAGd2B,EAAI1G,QAAQyG,GAAa,GACzBC,EAAInB,KAAKkB,GAGbtB,EAAKsB,UAAYC,EAAIE,KAAK,MAE1BzB,EAAKsB,UAAYA,KAjBd5I,MAuBfgJ,YAAa,SAAqBJ,GAC9B,OAAKA,EAGE5I,KAAKoH,SAAQ,SAAUE,GAC1B,IAAIuB,OAAM,EACNvB,EAAKsB,YAELC,EAAMvB,EAAKsB,UAAUX,MAAM,MAC3BY,EAAMA,EAAIC,QAAO,SAAU5C,GAGvB,OAFAA,EAAOA,EAAKgB,UAEPhB,GAAQA,IAAS0C,MAM1BtB,EAAKsB,UAAYC,EAAIE,KAAK,SAhBvB/I,MAsBfiJ,IAAK,SAAaV,EAAKC,GACnB,IAAIU,EAAeX,EAAM,IAAMC,EAAM,IACrC,OAAOxI,KAAKoH,SAAQ,SAAUE,GAC1B,IAAI6B,GAAS7B,EAAKmB,aAAa,UAAY,IAAIvB,OAC3CkC,OAAW,EACXC,EAAY,GACZF,GAEAC,EAAWD,EAAMlB,MAAM,KACvBmB,EAAShC,SAAQ,SAAUlB,GAEvB,IAAI2C,EAAM3C,EAAK+B,MAAM,KAAKqB,KAAI,SAAUrD,GACpC,OAAOA,EAAEiB,UAEM,IAAf2B,EAAIxE,QACJgF,EAAU3B,KAAKmB,EAAI,GAAK,IAAMA,EAAI,OAI1CQ,EAAYA,EAAUC,KAAI,SAAUpD,GAChC,OAA0B,IAAtBA,EAAK/D,QAAQoG,GACNW,EAEAhD,KAGXmD,EAAUlH,QAAQ+G,GAAgB,GAClCG,EAAU3B,KAAKwB,GAGnB5B,EAAKoB,aAAa,QAASW,EAAUN,KAAK,QAG1CzB,EAAKoB,aAAa,QAASQ,OAMvCK,KAAM,WACF,OAAOvJ,KAAKiJ,IAAI,UAAW,UAI/BO,KAAM,WACF,OAAOxJ,KAAKiJ,IAAI,UAAW,SAI/B1C,SAAU,WACN,IAAIe,EAAOtH,KAAK,GAChB,OAAKsH,EAIEjE,EAAEiE,EAAKf,UAHH,MAOfkD,WAAY,WACR,IAAInC,EAAOtH,KAAK,GAChB,OAAKsH,EAIEjE,EAAEiE,EAAKmC,YAHH,MAOfC,OAAQ,SAAgBC,GACpB,OAAO3J,KAAKoH,SAAQ,SAAUE,GAC1BqC,EAAUvC,SAAQ,SAAUwC,GACxBtC,EAAKuC,YAAYD,UAM7BE,OAAQ,WACJ,OAAO9J,KAAKoH,SAAQ,SAAUE,GAC1B,GAAIA,EAAKwC,OACLxC,EAAKwC,aACF,CACH,IAAIC,EAASzC,EAAK0C,cAClBD,GAAUA,EAAOE,YAAY3C,QAMzC4C,UAAW,SAAmBC,GAC1B,IAAI7C,EAAOtH,KAAK,GACZ4J,EAAQO,EAAO,GACnB,OAAO7C,EAAK8C,SAASR,IAIzBS,YAAa,WACT,IAAI/C,EAAOtH,KAAK,GAChB,OAAOsH,EAAKgD,yBAIhBC,YAAa,WACT,IAAIjD,EAAOtH,KAAK,GAChB,OAAOsH,EAAKkD,UAIhBC,KAAM,SAAchE,GAChB,IAAIa,EAAOtH,KAAK,GAChB,OAAOqD,EAAEiE,EAAKtB,iBAAiBS,KAInCiE,KAAM,SAAclC,GAChB,GAAKA,EAQD,OAAOxI,KAAKoH,SAAQ,SAAUE,GAC1BA,EAAKhB,UAAYkC,KAPrB,IAAIlB,EAAOtH,KAAK,GAChB,OAAOsH,EAAKhB,UAAUW,QAAQ,UAAU,WACpC,MAAO,OAWnB9D,KAAM,SAAcwH,GAChB,IAAIrD,EAAOtH,KAAK,GAChB,OAAa,MAAT2K,EACOrD,EAAKhB,WAEZgB,EAAKhB,UAAYqE,EACV3K,OAKfwI,IAAK,WACD,IAAIlB,EAAOtH,KAAK,GAChB,OAAOsH,EAAKqD,MAAMzD,QAItB0D,MAAO,WACH,OAAO5K,KAAKoH,SAAQ,SAAUE,GAC1BA,EAAKsD,YAKbb,OAAQ,WACJ,IAAIzC,EAAOtH,KAAK,GAChB,OAAOqD,EAAEiE,EAAK0C,gBAIlBa,YAAa,SAAqBpE,EAAUqE,GACxC,IAAIC,EAAUjF,SAASE,iBAAiBS,GACpCpC,EAAS0G,EAAQ1G,OACrB,IAAKA,EAED,OAAO,KAGX,IAAIiD,EAAOwD,GAAgB9K,KAAK,GAChC,GAAsB,SAAlBsH,EAAKkD,SACL,OAAO,KAGX,IAAIT,EAASzC,EAAK0C,cACd/D,OAAI,EACR,IAAKA,EAAI,EAAGA,EAAI5B,EAAQ4B,IACpB,GAAI8D,IAAWgB,EAAQ9E,GAEnB,OAAO5C,EAAE0G,GAKjB,OAAO/J,KAAK6K,YAAYpE,EAAUsD,IAItCiB,MAAO,SAAeC,GAClB,OAAuB,IAAnBA,EAAMlE,SACC/G,KAAK,KAAOiL,EAEZjL,KAAK,KAAOiL,EAAM,IAKjCC,aAAc,SAAsBzE,GAChC,IAAI0E,EAAiB9H,EAAEoD,GACnB2E,EAAgBD,EAAe,GACnC,OAAKC,EAGEpL,KAAKoH,SAAQ,SAAUE,GAC1B,IAAIyC,EAASqB,EAAcC,WAC3BtB,EAAOmB,aAAa5D,EAAM8D,MAJnBpL,MASfsL,YAAa,SAAqB7E,GAC9B,IAAI0E,EAAiB9H,EAAEoD,GACnB2E,EAAgBD,EAAe,GACnC,OAAKC,EAGEpL,KAAKoH,SAAQ,SAAUE,GAC1B,IAAIyC,EAASqB,EAAcC,WACvBtB,EAAOwB,YAAcH,EAErBrB,EAAOF,YAAYvC,GAGnByC,EAAOmB,aAAa5D,EAAM8D,EAAcI,gBATrCxL,OAqBnBqD,EAAEoI,OAAS,WACP5E,EAAUO,SAAQ,SAAUlB,GACxB,IAAIoB,EAAOpB,EAAKoB,KACZ3G,EAAOuF,EAAKvF,KACZ0G,EAAKnB,EAAKmB,GAEdC,EAAKe,oBAAoB1H,EAAM0G,OAQvC,IAAIqE,EAAS,CAGT3K,MAAO,CAAC,OAAQ,OAAQ,WAAY,WAAY,SAAU,YAAa,gBAAiB,YAAa,YAAa,OAAQ,OAAQ,UAAW,QAAS,WAAY,QAAS,QAAS,QAAS,OAAQ,OAAQ,QAE7MS,UAAW,CAAC,KAAM,OAAQ,QAAS,SAAU,WAE7CmK,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAa5GC,SAAU,CAAC,CAEPC,MAAO,KAEPlL,KAAM,QAENmL,QAAS,CAAC,CACNC,IAAK,OACLC,IAAK,wFACN,CACCD,IAAK,OACLC,IAAK,oFACN,CACCD,IAAK,MACLC,IAAK,oFAEV,CAECH,MAAO,KAEPlL,KAAM,QAENmL,QAAS,CAAC,CACNE,IAAK,uFACLD,IAAK,SACN,CACCC,IAAK,qFACLD,IAAK,QACN,CACCC,IAAK,oFACLD,IAAK,UAEV,CAECF,MAAO,QAEPlL,KAAM,QAENmL,QAAS,2DAA2D7D,MAAM,QAI9E7G,OAAQ,IAGRY,OAAO,EAGPiK,UAAW,SAAmBvB,EAAMwB,GAGhC,OAAO,GAKXC,aAAc,SAAsBH,GAEhC,OAAO,GAKXI,kBAAkB,EAGlBC,gBAAgB,EAIhBC,gBAAiB,SAAyBR,GAEtC,OAAOA,GAUXjK,aAAa,EAGb0K,gBAAiB,SAAyBxJ,KAK1CN,iBAAkB,QAMlBV,qBAAqB,EAMrBQ,eAAgB,GAGhBG,gBAAiB,GAKjB8J,iBAAkB,GAKlBC,iBAAiB,EAGjBC,iBAAkB,IAGlB/J,eAAgB,CASZC,OAAQ,SAAgB+J,EAAKhL,EAAQiL,KASrCC,QAAS,SAAiBF,EAAKhL,EAAQiF,KAGvCkG,KAAM,SAAcH,EAAKhL,EAAQiF,KAGjCmG,MAAO,SAAeJ,EAAKhL,KAG3BqL,QAAS,SAAiBL,EAAKhL,MAMnCsL,OAAO,GASPC,EAAK,CACLC,IAAKC,UAAUC,UAGfC,SAAU,WACN,IAAIC,EAAM,UACV,OAAOA,EAAIC,KAAKxN,KAAKmN,MAIzBM,KAAM,WACF,MAAO,kBAAmBC,SAKlC,SAASC,EAAWC,EAAKvG,GACrB,IAAIkB,OAAM,EACN3B,OAAS,EACb,IAAK2B,KAAOqF,EACR,GAAIA,EAAIxI,eAAemD,KACnB3B,EAASS,EAAGhC,KAAKuI,EAAKrF,EAAKqF,EAAIrF,KAChB,IAAX3B,GACA,MAOhB,SAASiH,EAAWC,EAASzG,GACzB,IAAIpB,OAAI,EACJC,OAAO,EACPU,OAAS,EACTvC,EAASyJ,EAAQzJ,QAAU,EAC/B,IAAK4B,EAAI,EAAGA,EAAI5B,EAAQ4B,IAGpB,GAFAC,EAAO4H,EAAQ7H,GACfW,EAASS,EAAGhC,KAAKyI,EAAS5H,EAAMD,IACjB,IAAXW,EACA,MAMZ,SAASmH,EAAUC,GACf,OAAOA,EAASC,KAAKC,SAASC,WAAWC,MAAM,GAInD,SAASC,EAAkBlL,GACvB,OAAY,MAARA,EACO,GAEJA,EAAK8D,QAAQ,MAAO,QAAQA,QAAQ,MAAO,QAAQA,QAAQ,MAAO,UAAUA,QAAQ,gBAAiB,SAOhH,SAASqH,EAAWjH,GAChB,MAAqB,oBAAPA,EAOlB,SAASkH,EAAK5M,GACV3B,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,qFACfrD,KAAKW,KAAO,QAGZX,KAAKwO,SAAU,EAInBD,EAAKpJ,UAAY,CACbgC,YAAaoH,EAGbE,QAAS,SAAiBtG,GAGtB,IAAIxG,EAAS3B,KAAK2B,OACd+M,EAAc/M,EAAOgN,UAAUC,mBAE/BF,GAEA/M,EAAOgN,UAAUE,mBAIrBlN,EAAOmN,IAAIC,GAAG,QAEVL,IAEA/M,EAAOgN,UAAUK,gBACjBrN,EAAOgN,UAAUM,qBAKzBC,gBAAiB,SAAyB/G,GACtC,IAAIxG,EAAS3B,KAAK2B,OACdsJ,EAAQjL,KAAKiL,MACbtJ,EAAOmN,IAAIK,kBAAkB,SAC7BnP,KAAKwO,SAAU,EACfvD,EAAMtC,SAAS,gBAEf3I,KAAKwO,SAAU,EACfvD,EAAMjC,YAAY,iBAS9B,IAAIoG,EAAc,SAAUzN,EAAQ0N,GAChC,IAAIC,EAAW3N,EAAO+J,OAAO4D,UAAY,GACrC1I,EAASyI,EAab,OAXAC,EAASlI,SAAQ,SAAUlB,GACvB,IAAIqH,EAAMrH,EAAKqH,IACX/E,EAAMtC,EAAKsC,IAEX+E,EAAIC,KAAK5G,KACTA,EAASA,EAAOK,QAAQsG,GAAK,WACzB,OAAO/E,SAKZ5B,GAMP2I,EAAW,aAGf,SAASC,EAASC,EAAMC,GACpB,IAAIC,EAAQ3P,KAGR2B,EAAS8N,EAAK9N,OAClB3B,KAAKyP,KAAOA,EACZzP,KAAK0P,IAAMA,EAEX,IAAIE,EAAavM,EAAE,oCAGfwM,EAASH,EAAIG,OACbC,OAAY,EACZD,IAEAC,EAAYD,EAAO1M,OACnB2M,EAAYV,EAAYzN,EAAQmO,GAChCD,EAAO1M,KAAK2M,GAEZD,EAAOlH,SAAS,gBAChBiH,EAAWlG,OAAOmG,IAGtB,IAAIE,EAAOL,EAAIK,MAAQ,GACnBpP,EAAO+O,EAAI/O,MAAQ,OACnB8N,EAAUiB,EAAIjB,SAAWc,EAGzBS,EAAQ3M,EAAE,eAA0B,SAAT1C,EAAkB,WAAa,aAAe,WAC7EiP,EAAWlG,OAAOsG,GAClBD,EAAK3I,SAAQ,SAAUlB,GACnB,IAAI+E,EAAQ/E,EAAK+E,MAGbgF,EAAWhF,EAAM9H,OACrB8M,EAAWb,EAAYzN,EAAQsO,GAC/BhF,EAAM9H,KAAK8M,GAEX,IAAItF,EAAQzE,EAAKyE,MACbuF,EAAM7M,EAAE,8BACR4H,IACAiF,EAAIxG,OAAOuB,GACX+E,EAAMtG,OAAOwG,GACbA,EAAInI,GAAG,SAAS,SAAUI,GACtBsG,EAAQ9D,GAGRgF,EAAMQ,cAAgBnN,YAAW,WAC7B2M,EAAMnG,SACP,UAMfoG,EAAW7H,GAAG,cAAc,SAAUI,GAClCwH,EAAMQ,cAAgBnN,YAAW,WAC7B2M,EAAMnG,SACP,MAIPxJ,KAAK4P,WAAaA,EAGlB5P,KAAKoQ,WAAY,EACjBpQ,KAAKqQ,OAAQ,EA2DjB,SAASC,EAAK3O,GACV,IAAIgO,EAAQ3P,KAEZA,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,+DACfrD,KAAKW,KAAO,WAGZX,KAAKwO,SAAU,EAGfxO,KAAKuQ,SAAW,IAAIf,EAASxP,KAAM,CAC/BwQ,MAAO,IACPX,OAAQxM,EAAE,eACV1C,KAAM,OACNoP,KAAM,CAAC,CAAE9E,MAAO5H,EAAE,eAAgBsH,MAAO,QAAU,CAAEM,MAAO5H,EAAE,eAAgBsH,MAAO,QAAU,CAAEM,MAAO5H,EAAE,eAAgBsH,MAAO,QAAU,CAAEM,MAAO5H,EAAE,eAAgBsH,MAAO,QAAU,CAAEM,MAAO5H,EAAE,eAAgBsH,MAAO,QAAU,CAAEM,MAAO5H,EAAE,aAAcsH,MAAO,QACnQ8D,QAAS,SAAiB9D,GAEtBgF,EAAMc,SAAS9F,MA4C3B,SAAS+F,EAAS/O,GACd,IAAIgO,EAAQ3P,KAEZA,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,mEACfrD,KAAKW,KAAO,WAGZX,KAAKwO,SAAU,EAGfxO,KAAKuQ,SAAW,IAAIf,EAASxP,KAAM,CAC/BwQ,MAAO,IACPX,OAAQxM,EAAE,aACV1C,KAAM,OACNoP,KAAM,CAAC,CAAE9E,MAAO5H,EAAE,oDAAqDsH,MAAO,KAAO,CAAEM,MAAO5H,EAAE,gDAAiDsH,MAAO,KAAO,CAAEM,MAAO5H,EAAE,uBAAwBsH,MAAO,KAAO,CAAEM,MAAO5H,EAAE,gDAAiDsH,MAAO,KAAO,CAAEM,MAAO5H,EAAE,oDAAqDsH,MAAO,KAAO,CAAEM,MAAO5H,EAAE,sDAAuDsH,MAAO,MACjb8D,QAAS,SAAiB9D,GAEtBgF,EAAMc,SAAS9F,MAqB3B,SAASgG,EAAShP,GACd,IAAIgO,EAAQ3P,KAEZA,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,6DACfrD,KAAKW,KAAO,WAGZX,KAAKwO,SAAU,EAGf,IAAI9C,EAAS/J,EAAO+J,OAChBlK,EAAYkK,EAAOlK,WAAa,GAGpCxB,KAAKuQ,SAAW,IAAIf,EAASxP,KAAM,CAC/BwQ,MAAO,IACPX,OAAQxM,EAAE,aACV1C,KAAM,OACNoP,KAAMvO,EAAU8H,KAAI,SAAUsH,GAC1B,MAAO,CAAE3F,MAAO5H,EAAE,6BAA+BuN,EAAW,MAAQA,EAAW,WAAYjG,MAAOiG,MAEtGnC,QAAS,SAAiB9D,GAEtBgF,EAAMc,SAAS9F,MApL3B6E,EAASrK,UAAY,CACjBgC,YAAaqI,EAGbjG,KAAM,WACEvJ,KAAKmQ,eAELU,aAAa7Q,KAAKmQ,eAGtB,IAAIV,EAAOzP,KAAKyP,KACZqB,EAAYrB,EAAKxE,MACjB2E,EAAa5P,KAAK4P,WACtB,IAAI5P,KAAKqQ,MAAT,CAGA,GAAIrQ,KAAKoQ,UAELR,EAAWrG,WACR,CAEH,IAAIwH,EAAaD,EAAUzG,cAAc2G,QAAU,EAC/CR,EAAQxQ,KAAK0P,IAAIc,OAAS,IAC9BZ,EAAW3G,IAAI,aAAc8H,EAAa,MAAM9H,IAAI,QAASuH,EAAQ,MAGrEM,EAAUpH,OAAOkG,GACjB5P,KAAKoQ,WAAY,EAIrBpQ,KAAKqQ,OAAQ,IAIjB7G,KAAM,WACExJ,KAAKiR,eAELJ,aAAa7Q,KAAKiR,eAGtB,IAAIrB,EAAa5P,KAAK4P,WACjB5P,KAAKqQ,QAIVT,EAAWpG,OACXxJ,KAAKqQ,OAAQ,KAgCrBC,EAAKnL,UAAY,CACbgC,YAAamJ,EAGbG,SAAU,SAAkB9F,GACxB,IAAIhJ,EAAS3B,KAAK2B,OAEduP,EAAiBvP,EAAOgN,UAAUwC,4BAClCxP,EAAOyP,UAAUpG,MAAMkG,IAM3BvP,EAAOmN,IAAIC,GAAG,cAAepE,IAIjCuE,gBAAiB,SAAyB/G,GACtC,IAAIxG,EAAS3B,KAAK2B,OACdsJ,EAAQjL,KAAKiL,MACbsC,EAAM,MACN8D,EAAW1P,EAAOmN,IAAIwC,kBAAkB,eACxC/D,EAAIC,KAAK6D,IACTrR,KAAKwO,SAAU,EACfvD,EAAMtC,SAAS,gBAEf3I,KAAKwO,SAAU,EACfvD,EAAMjC,YAAY,iBAkC9B0H,EAASvL,UAAY,CACjBgC,YAAauJ,EAGbD,SAAU,SAAkB9F,GACxB,IAAIhJ,EAAS3B,KAAK2B,OAClBA,EAAOmN,IAAIC,GAAG,WAAYpE,KAuClCgG,EAASxL,UAAY,CACjBgC,YAAawJ,EAEbF,SAAU,SAAkB9F,GACxB,IAAIhJ,EAAS3B,KAAK2B,OAClBA,EAAOmN,IAAIC,GAAG,WAAYpE,KAQlC,IAAI4G,EAAU,aAGVC,EAAuB,GAG3B,SAASC,EAAMhC,EAAMC,GACjB1P,KAAKyP,KAAOA,EACZzP,KAAK0P,IAAMA,EAyLf,SAASgC,EAAK/P,GACV3B,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,6DACfrD,KAAKW,KAAO,QAGZX,KAAKwO,SAAU,EAsJnB,SAASmD,EAAOhQ,GACZ3B,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,uFACfrD,KAAKW,KAAO,QAGZX,KAAKwO,SAAU,EA+CnB,SAASoD,EAAKjQ,GACV3B,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,qFACfrD,KAAKW,KAAO,QAGZX,KAAKwO,SAAU,EAsBnB,SAASqD,EAAclQ,GACnB3B,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,8FACfrD,KAAKW,KAAO,QAGZX,KAAKwO,SAAU,EA+CnB,SAASsD,EAAUnQ,GACf3B,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,0FACfrD,KAAKW,KAAO,QAGZX,KAAKwO,SAAU,EA+CnB,SAASuD,EAAKpQ,GACV3B,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,qFACfrD,KAAKW,KAAO,QAGZX,KAAKwO,SAAU,EAsBnB,SAASwD,EAAKrQ,GACV,IAAIgO,EAAQ3P,KAEZA,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,8DACfrD,KAAKW,KAAO,WAGZX,KAAKwO,SAAU,EAGfxO,KAAKuQ,SAAW,IAAIf,EAASxP,KAAM,CAC/BwQ,MAAO,IACPX,OAAQxM,EAAE,eACV1C,KAAM,OACNoP,KAAM,CAAC,CAAE9E,MAAO5H,EAAE,4DAA6DsH,MAAO,qBAAuB,CAAEM,MAAO5H,EAAE,oDAAqDsH,MAAO,wBACpL8D,QAAS,SAAiB9D,GAEtBgF,EAAMc,SAAS9F,MA2D3B,SAASsH,EAAQtQ,GACb,IAAIgO,EAAQ3P,KAEZA,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,uEACfrD,KAAKW,KAAO,WAGZX,KAAKwO,SAAU,EAGfxO,KAAKuQ,SAAW,IAAIf,EAASxP,KAAM,CAC/BwQ,MAAO,IACPX,OAAQxM,EAAE,eACV1C,KAAM,OACNoP,KAAM,CAAC,CAAE9E,MAAO5H,EAAE,2DAA4DsH,MAAO,eAAiB,CAAEM,MAAO5H,EAAE,6DAA8DsH,MAAO,iBAAmB,CAAEM,MAAO5H,EAAE,4DAA6DsH,MAAO,iBACxR8D,QAAS,SAAiB9D,GAEtBgF,EAAMc,SAAS9F,MAoB3B,SAASuH,EAAUvQ,GACf,IAAIgO,EAAQ3P,KAEZA,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,gEACfrD,KAAKW,KAAO,WAGZ,IAAI+K,EAAS/J,EAAO+J,OAChBC,EAASD,EAAOC,QAAU,GAG9B3L,KAAKwO,SAAU,EAGfxO,KAAKuQ,SAAW,IAAIf,EAASxP,KAAM,CAC/BwQ,MAAO,IACPX,OAAQxM,EAAE,eACV1C,KAAM,eACNoP,KAAMpE,EAAOrC,KAAI,SAAU6I,GACvB,MAAO,CAAElH,MAAO5H,EAAE,mBAAqB8O,EAAQ,oCAAqCxH,MAAOwH,MAE/F1D,QAAS,SAAiB9D,GAEtBgF,EAAMc,SAAS9F,MAoB3B,SAASyH,EAAUzQ,GACf,IAAIgO,EAAQ3P,KAEZA,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,oEACfrD,KAAKW,KAAO,WAGZ,IAAI+K,EAAS/J,EAAO+J,OAChBC,EAASD,EAAOC,QAAU,GAG9B3L,KAAKwO,SAAU,EAGfxO,KAAKuQ,SAAW,IAAIf,EAASxP,KAAM,CAC/BwQ,MAAO,IACPX,OAAQxM,EAAE,cACV1C,KAAM,eACNoP,KAAMpE,EAAOrC,KAAI,SAAU6I,GACvB,MAAO,CAAElH,MAAO5H,EAAE,mBAAqB8O,EAAQ,wCAAyCxH,MAAOwH,MAEnG1D,QAAS,SAAiB9D,GAEtBgF,EAAMc,SAAS9F,MAoB3B,SAAS0H,EAAM1Q,GACX3B,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,4FACfrD,KAAKW,KAAO,QAGZX,KAAKwO,SAAU,EA8DnB,SAAS8D,EAAK3Q,GACV3B,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,yFACfrD,KAAKW,KAAO,QAGZX,KAAKwO,SAAU,EAiInB,SAAS+D,EAAS5Q,GACd3B,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,sFACfrD,KAAKW,KAAO,QAGZX,KAAKwO,SAAU,EAqGnB,SAASgE,EAAM7Q,GACX3B,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,+DACfrD,KAAKW,KAAO,QAGZX,KAAKwO,SAAU,EAmVnB,SAASiE,EAAM9Q,GACX3B,KAAK2B,OAASA,EACd3B,KAAKiL,MAAQ5H,EAAE,6DACfrD,KAAKW,KAAO,QAGZX,KAAKwO,SAAU,EAqEnB,SAASkE,EAAM/Q,GACX3B,KAAK2B,OAASA,EACd,IAAIgR,EAAY5E,EAAU,WAC1B/N,KAAKiL,MAAQ5H,EAAE,6BAA+BsP,EAAY,0CAC1DhR,EAAOgR,UAAYA,EACnB3S,KAAKW,KAAO,QAGZX,KAAKwO,SAAU,EAr9CnBiD,EAAMtM,UAAY,CACdgC,YAAasK,EAGblI,KAAM,WACF,IAAIoG,EAAQ3P,KAERyP,EAAOzP,KAAKyP,KAChB,KAAI+B,EAAqBrP,QAAQsN,IAAS,GAA1C,CAKA,IAAI9N,EAAS8N,EAAK9N,OACdiR,EAAQvP,EAAE,QACVwP,EAAqBlR,EAAOkR,mBAC5BnD,EAAM1P,KAAK0P,IAGXE,EAAavM,EAAE,2CACfmN,EAAQd,EAAIc,OAAS,IACzBZ,EAAW3G,IAAI,QAASuH,EAAQ,MAAMvH,IAAI,eAAgB,EAAIuH,GAAS,EAAI,MAG3E,IAAIsC,EAAYzP,EAAE,kDAClBuM,EAAWlG,OAAOoJ,GAClBA,EAAU/K,GAAG,SAAS,WAClB4H,EAAMnG,UAIV,IAAIuJ,EAAqB1P,EAAE,yCACvB2P,EAAuB3P,EAAE,6CAC7BuM,EAAWlG,OAAOqJ,GAAoBrJ,OAAOsJ,GAG7C,IAAIhC,EAAStB,EAAIsB,OACbA,GACAgC,EAAqB/J,IAAI,SAAU+H,EAAS,MAAM/H,IAAI,aAAc,QAIxE,IAAIgK,EAAOvD,EAAIuD,MAAQ,GACnBC,EAAc,GACdC,EAAgB,GACpBF,EAAK7L,SAAQ,SAAUgM,EAAKC,GACxB,GAAKD,EAAL,CAGA,IAAIvH,EAAQuH,EAAIvH,OAAS,GACrByH,EAAMF,EAAIE,KAAO,GAGrBzH,EAAQuD,EAAYzN,EAAQkK,GAC5ByH,EAAMlE,EAAYzN,EAAQ2R,GAG1B,IAAIzD,EAASxM,EAAE,wBAA0BwI,EAAQ,SACjDkH,EAAmBrJ,OAAOmG,GAC1B,IAAI0D,EAAWlQ,EAAEiQ,GACjBN,EAAqBtJ,OAAO6J,GAG5B1D,EAAO2D,OAASH,EAChBH,EAAYxL,KAAKmI,GACjBsD,EAAczL,KAAK6L,GAGF,IAAbF,GACAxD,EAAOrB,SAAU,EACjBqB,EAAOlH,SAAS,eAEhB4K,EAAS/J,OAIbqG,EAAO9H,GAAG,SAAS,SAAUI,GACrB0H,EAAOrB,UAIX0E,EAAY9L,SAAQ,SAAUyI,GAC1BA,EAAOrB,SAAU,EACjBqB,EAAO7G,YAAY,iBAEvBmK,EAAc/L,SAAQ,SAAUmM,GAC5BA,EAAS/J,UAIbqG,EAAOrB,SAAU,EACjBqB,EAAOlH,SAAS,cAChB4K,EAAShK,eAKjBqG,EAAW7H,GAAG,SAAS,SAAUI,GAE7BA,EAAEsL,qBAENb,EAAM7K,GAAG,SAAS,SAAUI,GACxBwH,EAAMnG,UAIVqJ,EAAmBnJ,OAAOkG,GAG1BqD,EAAK7L,SAAQ,SAAUgM,EAAKpO,GACxB,GAAKoO,EAAL,CAGA,IAAIM,EAASN,EAAIM,QAAU,GAC3BA,EAAOtM,SAAQ,SAAUuM,GACrB,IAAIlN,EAAWkN,EAAMlN,SACjB9F,EAAOgT,EAAMhT,KACb0G,EAAKsM,EAAMtM,IAAMkK,EACjBgC,EAAWJ,EAAcnO,GAC7BuO,EAAS9I,KAAKhE,GAAUsB,GAAGpH,GAAM,SAAUwH,GACvCA,EAAEsL,kBACF,IAAIG,EAAavM,EAAGc,GAEhByL,GACAjE,EAAMnG,iBAOtB,IAAIqK,EAAUjE,EAAWnF,KAAK,6BAC1BoJ,EAAQxP,QACRwP,EAAQjM,IAAI,GAAGgD,QAInB5K,KAAK4P,WAAaA,EAGlB5P,KAAK8T,mBAELtC,EAAqB9J,KAAK+H,KAI9BjG,KAAM,WACF,IAAIiG,EAAOzP,KAAKyP,KACZG,EAAa5P,KAAK4P,WAClBA,GACAA,EAAW9F,SAIf0H,EAAuBA,EAAqB1I,QAAO,SAAU5C,GACzD,OAAIA,IAASuJ,MASrBqE,iBAAkB,WACTtC,EAAqBnN,QAG1BmN,EAAqBpK,SAAQ,SAAUqI,GACnC,IAAIsE,EAAQtE,EAAKsE,OAAS,GACtBA,EAAMvK,MACNuK,EAAMvK,YAoBtBkI,EAAKvM,UAAY,CACbgC,YAAauK,EAGbjD,QAAS,SAAiBtG,GACtB,IAAIxG,EAAS3B,KAAK2B,OACdqS,OAAY,EAEhB,GAAIhU,KAAKwO,QAAS,CAGd,GADAwF,EAAYrS,EAAOgN,UAAUwC,6BACxB6C,EACD,OAGJrS,EAAOgN,UAAUsF,kBAAkBD,GACnCrS,EAAOgN,UAAUM,mBAEjBjP,KAAKkU,aAAaF,EAAUtJ,OAAQsJ,EAAU1L,KAAK,cAG/C3G,EAAOgN,UAAUC,mBAEjB5O,KAAKkU,aAAa,GAAI,IAGtBlU,KAAKkU,aAAavS,EAAOgN,UAAUwF,mBAAoB,KAMnED,aAAc,SAAsBxJ,EAAMwB,GACtC,IAAIyD,EAAQ3P,KAGRoU,EAAcrG,EAAU,cACxBsG,EAActG,EAAU,cACxBuG,EAAUvG,EAAU,UACpBwG,EAAWxG,EAAU,WAGrByG,EAAgBxU,KAAKwO,QAAU,eAAiB,OAGhDuF,EAAQ,IAAItC,EAAMzR,KAAM,CACxBwQ,MAAO,IAEPyC,KAAM,CAAC,CAEHpH,MAAO,KAEPyH,IAAK,iDAAmDe,EAAc,sCAAwC3J,EAAO,uEAA6F0J,EAAc,sCAAwClI,EAAO,kJAAoJoI,EAAU,4EAAwFC,EAAW,uCAAyCC,EAAgB,sFAEzkBd,OAAQ,CAER,CACIjN,SAAU,IAAM6N,EAChB3T,KAAM,QACN0G,GAAI,WAEA,IAAIoN,EAAQpR,EAAE,IAAM+Q,GAChBM,EAAQrR,EAAE,IAAMgR,GAChBnI,EAAOuI,EAAMjM,MACbkC,EAAOgK,EAAMlM,MAIjB,OAHAmH,EAAMgF,YAAYjK,EAAMwB,IAGjB,IAIf,CACIzF,SAAU,IAAM8N,EAChB5T,KAAM,QACN0G,GAAI,WAKA,OAHAsI,EAAMiF,YAGC,SAQvBb,EAAMxK,OAGNvJ,KAAK+T,MAAQA,GAIjBa,SAAU,WACN,GAAK5U,KAAKwO,QAAV,CAGA,IAAI7M,EAAS3B,KAAK2B,OACdkT,EAAiBlT,EAAOgN,UAAUwC,4BACtC,GAAK0D,EAAL,CAGA,IAAIC,EAAgBnT,EAAOgN,UAAUwF,mBACrCxS,EAAOmN,IAAIC,GAAG,aAAc,SAAW+F,EAAgB,cAI3DH,YAAa,SAAqBjK,EAAMwB,GACpC,IAAIvK,EAAS3B,KAAK2B,OACd+J,EAAS/J,EAAO+J,OAChBO,EAAYP,EAAOO,UACnB8I,GAAc,EACd9I,GAAkC,oBAAdA,IACpB8I,EAAc9I,EAAUvB,EAAMwB,KAEd,IAAhB6I,EACApT,EAAOmN,IAAIC,GAAG,aAAc,YAAc7C,EAAO,qBAAuBxB,EAAO,QAE/EsK,MAAMD,IAKd7F,gBAAiB,SAAyB/G,GACtC,IAAIxG,EAAS3B,KAAK2B,OACdsJ,EAAQjL,KAAKiL,MACb4J,EAAiBlT,EAAOgN,UAAUwC,4BACjC0D,IAGgC,MAAjCA,EAAetK,eACfvK,KAAKwO,SAAU,EACfvD,EAAMtC,SAAS,gBAEf3I,KAAKwO,SAAU,EACfvD,EAAMjC,YAAY,kBAmB9B2I,EAAOxM,UAAY,CACfgC,YAAawK,EAGblD,QAAS,SAAiBtG,GAGtB,IAAIxG,EAAS3B,KAAK2B,OACd+M,EAAc/M,EAAOgN,UAAUC,mBAE/BF,GAEA/M,EAAOgN,UAAUE,mBAIrBlN,EAAOmN,IAAIC,GAAG,UAEVL,IAEA/M,EAAOgN,UAAUK,gBACjBrN,EAAOgN,UAAUM,qBAKzBC,gBAAiB,SAAyB/G,GACtC,IAAIxG,EAAS3B,KAAK2B,OACdsJ,EAAQjL,KAAKiL,MACbtJ,EAAOmN,IAAIK,kBAAkB,WAC7BnP,KAAKwO,SAAU,EACfvD,EAAMtC,SAAS,gBAEf3I,KAAKwO,SAAU,EACfvD,EAAMjC,YAAY,iBAmB9B4I,EAAKzM,UAAY,CACbgC,YAAayK,EAGbnD,QAAS,SAAiBtG,GAGtB,IAAIxG,EAAS3B,KAAK2B,OAGlBA,EAAOmN,IAAIC,GAAG,UAkBtB8C,EAAc1M,UAAY,CACtBgC,YAAa0K,EAGbpD,QAAS,SAAiBtG,GAGtB,IAAIxG,EAAS3B,KAAK2B,OACd+M,EAAc/M,EAAOgN,UAAUC,mBAE/BF,GAEA/M,EAAOgN,UAAUE,mBAIrBlN,EAAOmN,IAAIC,GAAG,iBAEVL,IAEA/M,EAAOgN,UAAUK,gBACjBrN,EAAOgN,UAAUM,qBAKzBC,gBAAiB,SAAyB/G,GACtC,IAAIxG,EAAS3B,KAAK2B,OACdsJ,EAAQjL,KAAKiL,MACbtJ,EAAOmN,IAAIK,kBAAkB,kBAC7BnP,KAAKwO,SAAU,EACfvD,EAAMtC,SAAS,gBAEf3I,KAAKwO,SAAU,EACfvD,EAAMjC,YAAY,iBAmB9B8I,EAAU3M,UAAY,CAClBgC,YAAa2K,EAGbrD,QAAS,SAAiBtG,GAGtB,IAAIxG,EAAS3B,KAAK2B,OACd+M,EAAc/M,EAAOgN,UAAUC,mBAE/BF,GAEA/M,EAAOgN,UAAUE,mBAIrBlN,EAAOmN,IAAIC,GAAG,aAEVL,IAEA/M,EAAOgN,UAAUK,gBACjBrN,EAAOgN,UAAUM,qBAKzBC,gBAAiB,SAAyB/G,GACtC,IAAIxG,EAAS3B,KAAK2B,OACdsJ,EAAQjL,KAAKiL,MACbtJ,EAAOmN,IAAIK,kBAAkB,cAC7BnP,KAAKwO,SAAU,EACfvD,EAAMtC,SAAS,gBAEf3I,KAAKwO,SAAU,EACfvD,EAAMjC,YAAY,iBAmB9B+I,EAAK5M,UAAY,CACbgC,YAAa4K,EAGbtD,QAAS,SAAiBtG,GAGtB,IAAIxG,EAAS3B,KAAK2B,OAGlBA,EAAOmN,IAAIC,GAAG,UAgCtBiD,EAAK7M,UAAY,CACbgC,YAAa6K,EAGbvB,SAAU,SAAkB9F,GACxB,IAAIhJ,EAAS3B,KAAK2B,OACdyP,EAAYzP,EAAOyP,UAEvB,GADAzP,EAAOgN,UAAUM,oBACbtN,EAAOmN,IAAIK,kBAAkBxE,GAAjC,CAGAhJ,EAAOmN,IAAIC,GAAGpE,GAGd,IAAIuG,EAAiBvP,EAAOgN,UAAUwC,4BAItC,GAHqC,OAAjCD,EAAe3G,gBACf2G,EAAiBA,EAAenH,WAEkB,IAAlD,WAAWyD,KAAK0D,EAAe3G,iBAG/B2G,EAAelG,MAAMoG,GAAzB,CAIA,IAAI6D,EAAU/D,EAAenH,SACzBkL,EAAQjK,MAAMoG,KAKlBF,EAAe5F,YAAY2J,GAC3BA,EAAQnL,aAIZoF,gBAAiB,SAAyB/G,GACtC,IAAIxG,EAAS3B,KAAK2B,OACdsJ,EAAQjL,KAAKiL,MACbtJ,EAAOmN,IAAIK,kBAAkB,wBAA0BxN,EAAOmN,IAAIK,kBAAkB,sBACpFnP,KAAKwO,SAAU,EACfvD,EAAMtC,SAAS,gBAEf3I,KAAKwO,SAAU,EACfvD,EAAMjC,YAAY,iBAiC9BiJ,EAAQ9M,UAAY,CAChBgC,YAAa8K,EAGbxB,SAAU,SAAkB9F,GACxB,IAAIhJ,EAAS3B,KAAK2B,OAClBA,EAAOmN,IAAIC,GAAGpE,KAsCtBuH,EAAU/M,UAAY,CAClBgC,YAAa+K,EAGbzB,SAAU,SAAkB9F,GACxB,IAAIhJ,EAAS3B,KAAK2B,OAClBA,EAAOmN,IAAIC,GAAG,YAAapE,KAsCnCyH,EAAUjN,UAAY,CAClBgC,YAAaiL,EAGb3B,SAAU,SAAkB9F,GACxB,IAAIhJ,EAAS3B,KAAK2B,OAClBA,EAAOmN,IAAIC,GAAG,YAAapE,KAkBnC0H,EAAMlN,UAAY,CACdgC,YAAakL,EAEb5D,QAAS,SAAiBtG,GACtB,IAAIxG,EAAS3B,KAAK2B,OACduP,EAAiBvP,EAAOgN,UAAUwC,4BAClC3G,EAAW0G,EAAe3G,cAE9B,GAAK2C,EAAGO,OAAR,CAYA,IAAI3B,OAAU,EACVoJ,OAAc,EAClB,GAAiB,MAAb1K,EAMA,OAJAsB,EAAUoF,EAAexG,OACzBwK,EAAc7R,EAAE,eAAiByI,EAAU,iBAC3CoJ,EAAY5J,YAAY4F,QACxBA,EAAepH,SAGF,eAAbU,IAEAsB,EAAUoF,EAAexG,OACzBwK,EAAc7R,EAAE,MAAQyI,EAAU,QAClCoJ,EAAY5J,YAAY4F,GACxBA,EAAepH,cA1BE,eAAbU,EAEA7I,EAAOmN,IAAIC,GAAG,cAAe,OAG7BpN,EAAOmN,IAAIC,GAAG,cAAe,iBAyBzCG,gBAAiB,SAAyB/G,GACtC,IAAIxG,EAAS3B,KAAK2B,OACdsJ,EAAQjL,KAAKiL,MACbsC,EAAM,gBACN8D,EAAW1P,EAAOmN,IAAIwC,kBAAkB,eACxC/D,EAAIC,KAAK6D,IACTrR,KAAKwO,SAAU,EACfvD,EAAMtC,SAAS,gBAEf3I,KAAKwO,SAAU,EACfvD,EAAMjC,YAAY,iBAmB9BsJ,EAAKnN,UAAY,CACbgC,YAAamL,EAEb7D,QAAS,SAAiBtG,GACtB,IAAIxG,EAAS3B,KAAK2B,OACdwT,EAAaxT,EAAOgN,UAAUyG,wBAC9BC,EAAW1T,EAAOgN,UAAU2G,sBAC5B5G,EAAc/M,EAAOgN,UAAUC,mBAC/BkG,EAAgBnT,EAAOgN,UAAUwF,mBACjCoB,OAAQ,EAEZ,GAAKJ,EAAWnK,MAAMqK,GAKtB,OAAK3G,OAUD1O,KAAKwO,QAELxO,KAAKkU,aAAaiB,EAAWhS,QAG7BnD,KAAKkU,iBAbLqB,EAAQlS,EAAE,SAAWyR,EAAgB,WACrCnT,EAAOmN,IAAIC,GAAG,aAAcwG,GAC5B5T,EAAOgN,UAAUsF,kBAAkBsB,GAAO,QAC1C5T,EAAOgN,UAAUM,oBARjBtN,EAAOgN,UAAUM,oBAsBzBiF,aAAc,SAAsBvJ,GAChC,IAAIgF,EAAQ3P,KAGZ2K,EAAQA,GAAS,GACjB,IAAIhK,EAAQgK,EAAgB,OAAR,MAChB6K,EAASzH,EAAU,SACnB0H,EAAQ1H,EAAU,OAElBgG,EAAQ,IAAItC,EAAMzR,KAAM,CACxBwQ,MAAO,IAEPyC,KAAM,CAAC,CAEHpH,MAAO,OAEPyH,IAAK,gDAAkDkC,EAAS,4BAA8B7K,EAAQ,oHAAsH8K,EAAQ,yFAEpO/B,OAAQ,CAER,CACIjN,SAAU,IAAMgP,EAChB9U,KAAM,QACN0G,GAAI,WACA,IAAIqN,EAAQrR,EAAE,IAAMmS,GAChB9K,EAAOgK,EAAMlM,OAASkM,EAAMvR,OAWhC,OAVAuH,EAAO2D,EAAkB3D,GACZ,QAAT/J,EAEAgP,EAAM+F,YAAYhL,GAGlBiF,EAAMgG,YAAYjL,IAIf,SAQvBqJ,EAAMxK,OAGNvJ,KAAK+T,MAAQA,GAIjB2B,YAAa,SAAqB/K,GAC9B,IAAIhJ,EAAS3B,KAAK2B,OAClBA,EAAOmN,IAAIC,GAAG,aAAc,cAAgBpE,EAAQ,6BAIxDgL,YAAa,SAAqBhL,GAC9B,IAAIhJ,EAAS3B,KAAK2B,OACdkT,EAAiBlT,EAAOgN,UAAUwC,4BACjC0D,IAGLA,EAAe1R,KAAKwH,GACpBhJ,EAAOgN,UAAUM,qBAIrBC,gBAAiB,SAAyB/G,GACtC,IAAIxG,EAAS3B,KAAK2B,OACdsJ,EAAQjL,KAAKiL,MACb4J,EAAiBlT,EAAOgN,UAAUwC,4BACtC,GAAK0D,EAAL,CAGA,IAAIe,EAAcf,EAAe9K,SACI,SAAjC8K,EAAetK,eAA0D,QAA9BqL,EAAYrL,eACvDvK,KAAKwO,SAAU,EACfvD,EAAMtC,SAAS,gBAEf3I,KAAKwO,SAAU,EACfvD,EAAMjC,YAAY,kBAmB9BuJ,EAASpN,UAAY,CACjBgC,YAAaoL,EAEb9D,QAAS,WACLzO,KAAKkU,gBAGTA,aAAc,WACV,IAAIvE,EAAQ3P,KAER2B,EAAS3B,KAAK2B,OACd+J,EAAS/J,EAAO+J,OAEhBE,EAAWF,EAAOE,UAAY,GAG9BiK,EAAY,GAChBjK,EAASxE,SAAQ,SAAU0O,GACvB,IAAIC,EAAWD,EAASnV,KACpBmL,EAAUgK,EAAShK,SAAW,GAG9BkK,EAAW,GAGE,UAAbD,GACAjK,EAAQ1E,SAAQ,SAAUlB,GAClBA,IACA8P,GAAY,0BAA4B9P,EAAO,cAK1C,UAAb6P,GACAjK,EAAQ1E,SAAQ,SAAUlB,GACtB,IAAI8F,EAAM9F,EAAK8F,IACXD,EAAM7F,EAAK6F,IACXC,IAEAgK,GAAY,oCAAsChK,EAAM,UAAYD,EAAM,8BAKtF8J,EAAUnO,KAAK,CACXmE,MAAOiK,EAASjK,MAChByH,IAAK,uCAAyC0C,EAAW,SACzDtC,OAAQ,CAAC,CACLjN,SAAU,gBACV9F,KAAM,QACN0G,GAAI,SAAYc,GACZ,IAAIpE,EAASoE,EAAEpE,OACXkS,EAAU5S,EAAEU,GACZyG,EAAWyL,EAAQ1L,cAEnB2L,OAAa,EAWjB,OARIA,EAFa,QAAb1L,EAEayL,EAAQlM,SAAS5G,OAGjB,SAAW8S,EAAQ9S,OAAS,UAG7CwM,EAAMwG,QAAQD,IAEP,UAMvB,IAAInC,EAAQ,IAAItC,EAAMzR,KAAM,CACxBwQ,MAAO,IACPQ,OAAQ,IAERiC,KAAM4C,IAIV9B,EAAMxK,OAGNvJ,KAAK+T,MAAQA,GAIjBoC,QAAS,SAAiBC,GACtB,IAAIzU,EAAS3B,KAAK2B,OAClBA,EAAOmN,IAAIC,GAAG,aAAcqH,KAkBpC5D,EAAMrN,UAAY,CACdgC,YAAaqL,EAEb/D,QAAS,WACDzO,KAAKwO,QAELxO,KAAKqW,mBAGLrW,KAAKsW,sBAKbA,mBAAoB,WAChB,IAAI3G,EAAQ3P,KAGRuW,EAAcxI,EAAU,OACxByI,EAAazI,EAAU,OACvB0I,EAAa1I,EAAU,OAEvBgG,EAAQ,IAAItC,EAAMzR,KAAM,CACxBwQ,MAAO,IAEPyC,KAAM,CAAC,CAEHpH,MAAO,OAEPyH,IAAK,sJAAkKkD,EAAa,0IAAiJC,EAAa,wOAA8PF,EAAc,0FAE9lB7C,OAAQ,CAAC,CAELjN,SAAU,IAAM8P,EAChB5V,KAAM,QACN0G,GAAI,WACA,IAAIqP,EAASC,SAAStT,EAAE,IAAMmT,GAAYhO,OACtCoO,EAASD,SAAStT,EAAE,IAAMoT,GAAYjO,OAQ1C,OANIkO,GAAUE,GAAUF,EAAS,GAAKE,EAAS,GAE3CjH,EAAMwG,QAAQO,EAAQE,IAInB,SAQvB7C,EAAMxK,OAGNvJ,KAAK+T,MAAQA,GAIjBoC,QAAS,SAAiBO,EAAQE,GAE9B,IAAIC,OAAI,EACJC,OAAI,EACJ3T,EAAO,kEACX,IAAK0T,EAAI,EAAGA,EAAIH,EAAQG,IAAK,CAEzB,GADA1T,GAAQ,OACE,IAAN0T,EACA,IAAKC,EAAI,EAAGA,EAAIF,EAAQE,IACpB3T,GAAQ,uBAGZ,IAAK2T,EAAI,EAAGA,EAAIF,EAAQE,IACpB3T,GAAQ,kBAGhBA,GAAQ,QAEZA,GAAQ,sBAGR,IAAIxB,EAAS3B,KAAK2B,OAClBA,EAAOmN,IAAIC,GAAG,aAAc5L,GAG5BxB,EAAOmN,IAAIC,GAAG,wBAAwB,GACtCpN,EAAOmN,IAAIC,GAAG,4BAA4B,IAI9CsH,iBAAkB,WACd,IAAIU,EAAS/W,KAGTgX,EAAcjJ,EAAU,WACxBkJ,EAAclJ,EAAU,WACxBmJ,EAAcnJ,EAAU,WACxBoJ,EAAcpJ,EAAU,WACxBqJ,EAAgBrJ,EAAU,aAG1BgG,EAAQ,IAAItC,EAAMzR,KAAM,CACxBwQ,MAAO,IAEPyC,KAAM,CAAC,CAEHpH,MAAO,OAEPyH,IAAK,4LAA8L0D,EAAc,wEAAyFE,EAAc,4EAA6FD,EAAc,wEAAyFE,EAAc,wKAAyLC,EAAgB,+FAEntB1D,OAAQ,CAAC,CAELjN,SAAU,IAAMuQ,EAChBrW,KAAM,QACN0G,GAAI,WAGA,OAFA0P,EAAOM,WAEA,IAEZ,CAEC5Q,SAAU,IAAMwQ,EAChBtW,KAAM,QACN0G,GAAI,WAGA,OAFA0P,EAAOO,WAEA,IAEZ,CAEC7Q,SAAU,IAAMyQ,EAChBvW,KAAM,QACN0G,GAAI,WAGA,OAFA0P,EAAOQ,WAEA,IAEZ,CAEC9Q,SAAU,IAAM0Q,EAChBxW,KAAM,QACN0G,GAAI,WAGA,OAFA0P,EAAOS,WAEA,IAEZ,CAEC/Q,SAAU,IAAM2Q,EAChBzW,KAAM,QACN0G,GAAI,WAGA,OAFA0P,EAAOU,aAEA,SAMvB1D,EAAMxK,QAIVmO,iBAAkB,WACd,IAAI9Q,EAAS,GACTjF,EAAS3B,KAAK2B,OACdkT,EAAiBlT,EAAOgN,UAAUwC,4BACtC,GAAK0D,EAAL,CAGA,IAAIrK,EAAWqK,EAAetK,cAC9B,GAAiB,OAAbC,GAAkC,OAAbA,EAAzB,CAKA,IAAImN,EAAM9C,EAAe9K,SACrB6N,EAAOD,EAAIpR,WACXsR,EAAWD,EAAKvT,OACpBuT,EAAKxQ,SAAQ,SAAU0Q,EAAI9S,GACvB,GAAI8S,IAAOjD,EAAe,GAOtB,OALAjO,EAAOkR,GAAK,CACR9S,MAAOA,EACPsC,KAAMwQ,EACNzT,OAAQwT,IAEL,KAKf,IAAIE,EAASJ,EAAI5N,SACbiO,EAAOD,EAAOxR,WACd0R,EAAWD,EAAK3T,OAcpB,OAbA2T,EAAK5Q,SAAQ,SAAU8Q,EAAIlT,GACvB,GAAIkT,IAAOP,EAAI,GAOX,OALA/Q,EAAOsR,GAAK,CACRlT,MAAOA,EACPsC,KAAM4Q,EACN7T,OAAQ4T,IAEL,KAKRrR,KAIXyQ,QAAS,WAEL,IAAIc,EAAenY,KAAK0X,mBACxB,GAAKS,EAAL,CAGA,IAAIC,EAASD,EAAaD,GACtBG,EAAahV,EAAE+U,EAAO9Q,MACtBgR,EAASH,EAAaL,GACtBD,EAAWS,EAAOjU,OAGlBkU,EAAQzS,SAASO,cAAc,MAC/BiN,EAAM,GACNrN,OAAI,EACR,IAAKA,EAAI,EAAGA,EAAI4R,EAAU5R,IACtBqN,GAAO,kBAEXiF,EAAMjS,UAAYgN,EAElBjQ,EAAEkV,GAAOjN,YAAY+M,KAIzBf,QAAS,WAEL,IAAIa,EAAenY,KAAK0X,mBACxB,GAAKS,EAAL,CAGA,IAAIC,EAASD,EAAaD,GACtBI,EAASH,EAAaL,GACtBU,EAAUF,EAAOtT,MACjBqT,EAAahV,EAAE+U,EAAO9Q,MACtBmR,EAAYJ,EAAWtO,SACvBiO,EAAOS,EAAUlS,WAGrByR,EAAK5Q,SAAQ,SAAU8Q,GACnB,IAAIP,EAAMtU,EAAE6U,GACRN,EAAOD,EAAIpR,WACXmS,EAAad,EAAKhQ,IAAI4Q,GACtB/X,EAAOiY,EAAWnO,cAAcoO,cAGhCC,EAAQ9S,SAASO,cAAc5F,GACnC4C,EAAEuV,GAAOtN,YAAYoN,QAK7BnB,QAAS,WAEL,IAAIY,EAAenY,KAAK0X,mBACxB,GAAKS,EAAL,CAGA,IAAIC,EAASD,EAAaD,GACtBG,EAAahV,EAAE+U,EAAO9Q,MAC1B+Q,EAAWvO,WAIf0N,QAAS,WAEL,IAAIW,EAAenY,KAAK0X,mBACxB,GAAKS,EAAL,CAGA,IAAIC,EAASD,EAAaD,GACtBI,EAASH,EAAaL,GACtBU,EAAUF,EAAOtT,MACjBqT,EAAahV,EAAE+U,EAAO9Q,MACtBmR,EAAYJ,EAAWtO,SACvBiO,EAAOS,EAAUlS,WAGrByR,EAAK5Q,SAAQ,SAAU8Q,GACnB,IAAIP,EAAMtU,EAAE6U,GACRN,EAAOD,EAAIpR,WACXmS,EAAad,EAAKhQ,IAAI4Q,GAE1BE,EAAW5O,cAKnB2N,UAAW,WACP,IAAI9V,EAAS3B,KAAK2B,OACdkT,EAAiBlT,EAAOgN,UAAUwC,4BACtC,GAAK0D,EAAL,CAGA,IAAIgE,EAAShE,EAAehK,YAAY,SACnCgO,GAGLA,EAAO/O,WAIXoF,gBAAiB,SAAyB/G,GACtC,IAAIxG,EAAS3B,KAAK2B,OACdsJ,EAAQjL,KAAKiL,MACb4J,EAAiBlT,EAAOgN,UAAUwC,4BACtC,GAAK0D,EAAL,CAGA,IAAIrK,EAAWqK,EAAetK,cACb,OAAbC,GAAkC,OAAbA,GACrBxK,KAAKwO,SAAU,EACfvD,EAAMtC,SAAS,gBAEf3I,KAAKwO,SAAU,EACfvD,EAAMjC,YAAY,kBAmB9ByJ,EAAMtN,UAAY,CACdgC,YAAasL,EAEbhE,QAAS,WACLzO,KAAKkU,gBAGTA,aAAc,WACV,IAAIvE,EAAQ3P,KAGR8Y,EAAY/K,EAAU,YACtB0H,EAAQ1H,EAAU,OAGlBgG,EAAQ,IAAItC,EAAMzR,KAAM,CACxBwQ,MAAO,IAEPyC,KAAM,CAAC,CAEHpH,MAAO,OAEPyH,IAAK,6CAA+CwF,EAAY,mLAAyMrD,EAAQ,0FAEjR/B,OAAQ,CAAC,CACLjN,SAAU,IAAMgP,EAChB9U,KAAM,QACN0G,GAAI,WACA,IAAIqN,EAAQrR,EAAE,IAAMyV,GAChBtQ,EAAMkM,EAAMlM,MAAMtB,OAWtB,OANIsB,GAEAmH,EAAMwG,QAAQ3N,IAIX,SAQvBuL,EAAMxK,OAGNvJ,KAAK+T,MAAQA,GAIjBoC,QAAS,SAAiB3N,GACtB,IAAI7G,EAAS3B,KAAK2B,OAClBA,EAAOmN,IAAIC,GAAG,aAAcvG,EAAM,iBAoB1CkK,EAAMvN,UAAY,CACdgC,YAAauL,EAEbjE,QAAS,WACL,IAAI9M,EAAS3B,KAAK2B,OACd+J,EAAS/J,EAAO+J,OAChBA,EAAOuB,QAGPjN,KAAKwO,QACLxO,KAAKqW,mBAELrW,KAAKsW,uBAIbD,iBAAkB,WACd,IAAI1U,EAAS3B,KAAK2B,OAGdoX,EAAUhL,EAAU,YACpBiL,EAAUjL,EAAU,YACpBkL,EAAWlL,EAAU,aACrBmL,EAASnL,EAAU,WAGnBoL,EAAa,CAAC,CACdtN,MAAO,OACPyH,IAAK,mSAA8TyF,EAAU,oEAAsEC,EAAU,oEAAsEC,EAAW,yJAA2JC,EAAS,uFAClpBxF,OAAQ,CAAC,CACLjN,SAAU,IAAMsS,EAChBpY,KAAM,QACN0G,GAAI,WACA,IAAI+R,EAAOzX,EAAO0X,aAKlB,OAJID,GACAA,EAAKnQ,IAAI,YAAa,QAGnB,IAEZ,CACCxC,SAAU,IAAMuS,EAChBrY,KAAM,QACN0G,GAAI,WACA,IAAI+R,EAAOzX,EAAO0X,aAKlB,OAJID,GACAA,EAAKnQ,IAAI,YAAa,QAGnB,IAEZ,CACCxC,SAAU,IAAMwS,EAChBtY,KAAM,QACN0G,GAAI,WACA,IAAI+R,EAAOzX,EAAO0X,aAKlB,OAJID,GACAA,EAAKnQ,IAAI,YAAa,SAGnB,IAEZ,CACCxC,SAAU,IAAMyS,EAChBvY,KAAM,QACN0G,GAAI,WACA,IAAI+R,EAAOzX,EAAO0X,aAKlB,OAJID,GACAA,EAAKtP,UAGF,OAMfiK,EAAQ,IAAItC,EAAMzR,KAAM,CACxBwQ,MAAO,IACPyC,KAAMkG,IAEVpF,EAAMxK,OAGNvJ,KAAK+T,MAAQA,GAGjBuC,mBAAoB,WAChB,IAAI3U,EAAS3B,KAAK2B,OACd2X,EAAY3X,EAAO2X,UACnB5N,EAAS/J,EAAO+J,OAGhB6N,EAAcxL,EAAU,cACxByL,EAAWzL,EAAU,WACrB0L,EAAY1L,EAAU,YACtB2L,EAAY3L,EAAU,YAGtBoL,EAAa,CAAC,CACdtN,MAAO,OACPyH,IAAK,oEAAsEiG,EAAc,oMAAsMC,EAAW,sJAC1S9F,OAAQ,CAAC,CAELjN,SAAU,IAAM8S,EAChB5Y,KAAM,QACN0G,GAAI,WACA,IAAIsS,EAAQtW,EAAE,IAAMmW,GAChBI,EAAWD,EAAM,GACrB,IAAIC,EAIA,OAAO,EAHPA,EAASC,UAMlB,CAECpT,SAAU,IAAM+S,EAChB7Y,KAAM,SACN0G,GAAI,WACA,IAAIsS,EAAQtW,EAAE,IAAMmW,GAChBI,EAAWD,EAAM,GACrB,IAAKC,EAED,OAAO,EAIX,IAAIE,EAAWF,EAAShN,MAMxB,OALIkN,EAASzV,QACTiV,EAAUA,UAAUQ,IAIjB,MAInB,CACIjO,MAAO,OACPyH,IAAK,yCAA2CmG,EAAY,sJAA4KC,EAAY,kFACpPhG,OAAQ,CAAC,CACLjN,SAAU,IAAMiT,EAChB/Y,KAAM,QACN0G,GAAI,WACA,IAAI0S,EAAW1W,EAAE,IAAMoW,GACnB1W,EAAMgX,EAASvR,MAAMtB,OAOzB,OALInE,GACAuW,EAAUU,cAAcjX,IAIrB,OAOfkX,EAAmB,IAClBvO,EAAO3J,qBAAuB2J,EAAO5J,iBAAmB4J,EAAOwO,kBAAoBxM,OAAOyM,YAE3FF,EAAiBvS,KAAKyR,EAAW,IAEjCzN,EAAO7J,aAEPoY,EAAiBvS,KAAKyR,EAAW,IAIrC,IAAIpF,EAAQ,IAAItC,EAAMzR,KAAM,CACxBwQ,MAAO,IACPyC,KAAMgH,IAEVlG,EAAMxK,OAGNvJ,KAAK+T,MAAQA,GAIjB7E,gBAAiB,SAAyB/G,GACtC,IAAIxG,EAAS3B,KAAK2B,OACdsJ,EAAQjL,KAAKiL,MACbtJ,EAAO0X,cACPrZ,KAAKwO,SAAU,EACfvD,EAAMtC,SAAS,gBAEf3I,KAAKwO,SAAU,EACfvD,EAAMjC,YAAY,iBAU9B,IAAIoR,EAAmB,GA8CvB,SAASC,EAAM1Y,GACX3B,KAAK2B,OAASA,EACd3B,KAAKe,MAAQ,GA0HjB,SAASuZ,EAAanS,GAClB,IAAIoS,EAAgBpS,EAAEoS,eAAiBpS,EAAEqS,eAAiBrS,EAAEqS,cAAcD,cACtEE,OAAY,EAOhB,OALIA,EADiB,MAAjBF,EACY7M,OAAO6M,eAAiB7M,OAAO6M,cAAcG,QAAQ,QAErDH,EAAcG,QAAQ,cAG/BrM,EAAkBoM,GAI7B,SAASE,EAAaxS,EAAGyS,EAAaC,GAClC,IAAIN,EAAgBpS,EAAEoS,eAAiBpS,EAAEqS,eAAiBrS,EAAEqS,cAAcD,cACtEE,OAAY,EACZK,OAAY,EAUhB,GATqB,MAAjBP,EACAE,EAAY/M,OAAO6M,eAAiB7M,OAAO6M,cAAcG,QAAQ,SAEjED,EAAYF,EAAcG,QAAQ,cAClCI,EAAYP,EAAcG,QAAQ,eAEjCI,GAAaL,IACdK,EAAY,MAAQzM,EAAkBoM,GAAa,QAElDK,EAAL,CAKA,IAAIC,EAAeD,EAAU7S,MAAM,WAyBnC,OAxB4B,IAAxB8S,EAAa1W,SACbyW,EAAYC,EAAa,IAI7BD,EAAYA,EAAU7T,QAAQ,6BAA8B,IAE5D6T,EAAYA,EAAU7T,QAAQ,eAAgB,IAE9C6T,EAAYA,EAAU7T,QAAQ,+BAAgC,IAE1D4T,IAEAC,EAAYA,EAAU7T,QAAQ,cAAe,KAK7C6T,EAFAF,EAEYE,EAAU7T,QAAQ,oCAAqC,IAGvD6T,EAAU7T,QAAQ,4BAA6B,IAGxD6T,GAIX,SAASE,EAAa7S,GAClB,IAAIvB,EAAS,GACT1D,EAAMoX,EAAanS,GACvB,GAAIjF,EAEA,OAAO0D,EAGX,IAAI2T,EAAgBpS,EAAEoS,eAAiBpS,EAAEqS,eAAiBrS,EAAEqS,cAAcD,eAAiB,GACvFU,EAAQV,EAAcU,MAC1B,OAAKA,GAILtN,EAAWsN,GAAO,SAAU1S,EAAKoC,GAC7B,IAAIhK,EAAOgK,EAAMhK,KACb,SAAS6M,KAAK7M,IACdiG,EAAOc,KAAKiD,EAAMuQ,gBAInBtU,GAVIA,EAkBf,SAASuU,EAAgBlQ,GACrB,IAAIrE,EAAS,GACT+C,EAAYsB,EAAMxB,cAAgB,GAmCtC,OAlCAE,EAAUvC,SAAQ,SAAUgU,GACxB,IAAIC,OAAa,EACbtU,EAAWqU,EAAQrU,SASvB,GANiB,IAAbA,IACAsU,EAAaD,EAAQE,YACrBD,EAAahN,EAAkBgN,IAIlB,IAAbtU,EAAgB,CAChBsU,EAAa,GAGbA,EAAWE,IAAMH,EAAQ5Q,SAASmO,cAKlC,IAHA,IAAI6C,EAAW,GACXC,EAAWL,EAAQM,YAAc,GACjCC,EAAiBF,EAASpX,QAAU,EAC/B4B,EAAI,EAAGA,EAAI0V,EAAgB1V,IAAK,CACrC,IAAIqC,EAAOmT,EAASxV,GACpBuV,EAAS9T,KAAK,CACVjH,KAAM6H,EAAK7H,KACXkK,MAAOrC,EAAKqC,QAGpB0Q,EAAW/a,MAAQkb,EAEnBH,EAAW9U,SAAW4U,EAAgB9X,EAAE+X,IAG5CxU,EAAOc,KAAK2T,MAETzU,EAIX,SAASgV,EAAKja,GACV3B,KAAK2B,OAASA,EAwflB,SAASka,EAAQla,GACb3B,KAAK2B,OAASA,EAqGlB,SAASma,EAAIna,GACT3B,KAAK2B,OAASA,EACd3B,KAAK+b,cAAgB,KAmLzB,SAASC,EAASra,GACd3B,KAAK2B,OAASA,EACd3B,KAAKic,MAAQ,EACbjc,KAAKkc,SAAU,EACflc,KAAKmc,WAAY,EACjBnc,KAAKoc,WAAa,EAClBpc,KAAKqc,eAAiB1a,EAAOkR,mBAC7B7S,KAAKsc,KAAOjZ,EAAE,oCArkClB+W,EAAiBmC,KAAOhO,EAExB6L,EAAiBoC,KAAOlM,EAExB8J,EAAiBqC,SAAW/L,EAE5B0J,EAAiBxJ,SAAWD,EAE5ByJ,EAAiBlO,KAAOwF,EAExB0I,EAAiBsC,OAAS/K,EAE1ByI,EAAiBuC,KAAO/K,EAExBwI,EAAiBwC,cAAgB/K,EAEjCuI,EAAiByC,UAAY/K,EAE7BsI,EAAiB0C,KAAO/K,EAExBqI,EAAiBrK,KAAOiC,EAExBoI,EAAiB2C,QAAU9K,EAE3BmI,EAAiB4C,UAAY9K,EAE7BkI,EAAiB6C,UAAY7K,EAE7BgI,EAAiB8C,MAAQ7K,EAEzB+H,EAAiB+C,KAAO7K,EAExB8H,EAAiBgD,SAAW7K,EAE5B6H,EAAiBiD,MAAQ7K,EAEzB4H,EAAiBkD,MAAQ7K,EAEzB2H,EAAiBmD,MAAQ7K,EAYzB2H,EAAMlV,UAAY,CACdgC,YAAakT,EAGbmD,KAAM,WACF,IAAI7N,EAAQ3P,KAER2B,EAAS3B,KAAK2B,OACd+J,EAAS/J,EAAO+J,QAAU,GAC1B+R,EAAc/R,EAAO3K,OAAS,GAGlC0c,EAAYrW,SAAQ,SAAUsW,GAC1B,IAAIC,EAAkBvD,EAAiBsD,GACnCC,GAA8C,oBAApBA,IAE1BhO,EAAM5O,MAAM2c,GAAW,IAAIC,EAAgBhc,OAKnD3B,KAAK4d,gBAGL5d,KAAK6d,cAITD,cAAe,WACX,IAAIjc,EAAS3B,KAAK2B,OACdmc,EAAenc,EAAOmc,aACtB/c,EAAQf,KAAKe,MACb2K,EAAS/J,EAAO+J,OAEhBtK,EAASsK,EAAOtK,OAAS,EAC7BuM,EAAW5M,GAAO,SAAUwH,EAAKkH,GAC7B,IAAIxE,EAAQwE,EAAKxE,MACbA,IAEAA,EAAMhC,IAAI,UAAW7H,GACrB0c,EAAapU,OAAOuB,QAMhC4S,WAAY,WACR,IAAI9c,EAAQf,KAAKe,MACbY,EAAS3B,KAAK2B,OAClBgM,EAAW5M,GAAO,SAAUwH,EAAKkH,GAC7B,IAAI9O,EAAO8O,EAAK9O,KAChB,GAAKA,EAAL,CAGA,IAAIsK,EAAQwE,EAAKxE,MACbsF,EAAWd,EAAKc,SACRd,EAAKsE,MAGJ,UAATpT,GAAoB8O,EAAKhB,SACzBxD,EAAMlD,GAAG,SAAS,SAAUI,GACW,MAA/BxG,EAAOgN,UAAUoP,YAGrBtO,EAAKhB,QAAQtG,MAKR,aAATxH,GAAuB4P,GACvBtF,EAAMlD,GAAG,cAAc,SAAUI,GACM,MAA/BxG,EAAOgN,UAAUoP,aAIrBxN,EAASU,cAAgBjO,YAAW,WAChCuN,EAAShH,SACV,SACJxB,GAAG,cAAc,SAAUI,GAE1BoI,EAASJ,cAAgBnN,YAAW,WAChCuN,EAAS/G,SACV,MAKE,UAAT7I,GAAoB8O,EAAKhB,SACzBxD,EAAMlD,GAAG,SAAS,SAAUI,GACxBA,EAAEsL,kBACiC,MAA/B9R,EAAOgN,UAAUoP,YAIrBtO,EAAKhB,QAAQtG,WAO7B6V,aAAc,WACV,IAAIjd,EAAQf,KAAKe,MACjB4M,EAAW5M,GAAO,SAAUwH,EAAKkH,GACzBA,EAAKP,iBACLlM,YAAW,WACPyM,EAAKP,oBACN,UAkJnB0M,EAAKzW,UAAY,CACbgC,YAAayU,EAGb4B,KAAM,WAEFxd,KAAK6d,cAITI,MAAO,WACHje,KAAKmD,KAAK,gBAIdA,KAAM,SAAcqF,GAChB,IAAI7G,EAAS3B,KAAK2B,OACdyP,EAAYzP,EAAOyP,UACnBjO,OAAO,EACX,GAAW,MAAPqF,EAIA,OAHArF,EAAOiO,EAAUjO,OAEjBA,EAAOA,EAAK8D,QAAQ,WAAY,IACzB9D,EAEPiO,EAAUjO,KAAKqF,GAGf7G,EAAOuc,iBAKfC,QAAS,WACL,IAAIxc,EAAS3B,KAAK2B,OACdyP,EAAYzP,EAAOyP,UACvB,OAAO+J,EAAgB/J,IAI3B1G,KAAM,SAAclC,GAChB,IAAI7G,EAAS3B,KAAK2B,OACdyP,EAAYzP,EAAOyP,UACnB1G,OAAO,EACX,GAAW,MAAPlC,EAIA,OAHAkC,EAAO0G,EAAU1G,OAEjBA,EAAOA,EAAKzD,QAAQ,WAAY,IACzByD,EAEP0G,EAAU1G,KAAK,MAAQlC,EAAM,QAG7B7G,EAAOuc,iBAKfxU,OAAQ,SAAgBvG,GACpB,IAAIxB,EAAS3B,KAAK2B,OACdyP,EAAYzP,EAAOyP,UACvBA,EAAU1H,OAAOrG,EAAEF,IAGnBxB,EAAOuc,iBAIXL,WAAY,WAER7d,KAAKoe,qBAGLpe,KAAKqe,kBAGLre,KAAKse,eAGLte,KAAKue,eAGLve,KAAKwe,aAGLxe,KAAKye,aAGLze,KAAK0e,eAITN,mBAAoB,WAChB,IAAIzc,EAAS3B,KAAK2B,OACdyP,EAAYzP,EAAOyP,UAGvB,SAASuN,EAAUxW,GAEfxG,EAAOgN,UAAUgQ,YAEjBhd,EAAOZ,MAAMid,eAGjB5M,EAAUrJ,GAAG,QAAS4W,GACtBvN,EAAUrJ,GAAG,aAAa,SAAUI,GAEhCiJ,EAAUrJ,GAAG,aAAc4W,MAE/BvN,EAAUrJ,GAAG,WAAW,SAAUI,GAC9BwW,IAEAvN,EAAUhJ,IAAI,aAAcuW,OAKpCN,gBAAiB,WACb,IAAI1c,EAAS3B,KAAK2B,OACdyP,EAAYzP,EAAOyP,UAEvB,SAASwN,EAAa1N,GAClB,IAAI2N,EAAKxb,EAAE,eACXwb,EAAG3T,aAAagG,GAChBvP,EAAOgN,UAAUsF,kBAAkB4K,GAAI,GACvCld,EAAOgN,UAAUM,mBACjBiC,EAAepH,SAInB,SAASgV,EAAQ3W,GACb,IAAI+I,EAAiBvP,EAAOgN,UAAUwC,4BAClCyE,EAAc1E,EAAenH,SAEjC,GAA2B,sBAAvB6L,EAAYzS,QAOhB,GAAKyS,EAAY5K,MAAMoG,GAAvB,CAKA,IAAI5G,EAAW0G,EAAe3G,cACb,MAAbC,IAKA0G,EAAexG,QAMnBkU,EAAa1N,UArBT0N,EAAa1N,GAkCrB,SAAS6N,EAAW5W,GAChB,IAAI+I,EAAiBvP,EAAOgN,UAAUwC,4BACtC,GAAKD,EAAL,CAGA,IAAI0E,EAAc1E,EAAenH,SAC7BiV,EAAoB9N,EAAe3G,cACnC0U,EAAiBrJ,EAAYrL,cAEjC,GAA0B,SAAtByU,GAAmD,QAAnBC,GAK/Btd,EAAOmN,IAAIoQ,sBAAsB,cAAtC,CAMA,IAA8B,IAA1Bvd,EAAOwd,eAAyB,CAGhC,IAAIN,EAAKxb,EAAE,eASX,OARAwb,EAAGvT,YAAYsK,GACfjU,EAAOgN,UAAUsF,kBAAkB4K,GAAI,GACvCld,EAAOgN,UAAUM,mBAGjBtN,EAAOwd,gBAAiB,OAExBhX,EAAEiX,iBAIN,IAAIC,EAAe1d,EAAOgN,UAAUoP,WAAWuB,YAG/C3d,EAAOmN,IAAIC,GAAG,aAAc,MAC5BpN,EAAOgN,UAAUgQ,YACbhd,EAAOgN,UAAUoP,WAAWuB,cAAgBD,GAE5C1d,EAAOmN,IAAIC,GAAG,aAAc,MAGhC,IAAIwQ,EAAarO,EAAe/N,OAAOkB,OACnC1C,EAAOgN,UAAUoP,WAAWuB,YAAc,IAAMC,IAGhD5d,EAAOwd,gBAAiB,GAI5BhX,EAAEiX,mBA/DNhO,EAAUrJ,GAAG,SAAS,SAAUI,GACV,KAAdA,EAAEqX,SAKNV,EAAQ3W,MA4DZiJ,EAAUrJ,GAAG,WAAW,SAAUI,GACZ,KAAdA,EAAEqX,QAONT,EAAW5W,GAJPxG,EAAOwd,gBAAiB,MASpCb,aAAc,WACV,IAAI3c,EAAS3B,KAAK2B,OACdyP,EAAYzP,EAAOyP,UAEvBA,EAAUrJ,GAAG,WAAW,SAAUI,GAC9B,GAAkB,IAAdA,EAAEqX,QAAN,CAGA,IAAIC,EAAUrO,EAAUjO,OAAOwV,cAAczR,OAC7B,gBAAZuY,GAEAtX,EAAEiX,qBAKVhO,EAAUrJ,GAAG,SAAS,SAAUI,GAC5B,GAAkB,IAAdA,EAAEqX,QAAN,CAGA,IAAIX,OAAK,EACLY,EAAUrO,EAAUjO,OAAOwV,cAAczR,OAGxCuY,GAAuB,SAAZA,IAEZZ,EAAKxb,EAAE,gBACP+N,EAAUjO,KAAK,IACfiO,EAAU1H,OAAOmV,GACjBld,EAAOgN,UAAUsF,kBAAkB4K,GAAI,GAAO,GAC9Cld,EAAOgN,UAAUM,yBAM7BsP,aAAc,WACV,IAAI5c,EAAS3B,KAAK2B,OACd+J,EAAS/J,EAAO+J,OAChBU,EAAmBV,EAAOU,iBAC1BE,EAAkBZ,EAAOY,gBACzBuO,EAAYnP,EAAOW,eACnB+E,EAAYzP,EAAOyP,UAInBsO,EAAY,EAChB,SAASC,IACL,IAAIC,EAAMC,KAAKD,MACXE,GAAO,EAMX,OALIF,EAAMF,GAAa,MAEnBI,GAAO,GAEXJ,EAAYE,EACLE,EAEX,SAASC,IACLL,EAAY,EAIhBtO,EAAUrJ,GAAG,SAAS,SAAUI,GAC5B,IAAI+E,EAAGO,SAIHtF,EAAEiX,iBAIDO,KAAL,CAKA,IAAI7E,EAAYH,EAAaxS,EAAGiE,EAAkByO,GAC9CJ,EAAYH,EAAanS,GAC7BsS,EAAYA,EAAUxT,QAAQ,OAAQ,QAEtC,IAAIiK,EAAiBvP,EAAOgN,UAAUwC,4BACtC,GAAKD,EAAL,CAGA,IAAI1G,EAAW0G,EAAe3G,cAG9B,GAAiB,SAAbC,GAAoC,QAAbA,EAMvB,OALI8B,GAAmBgC,EAAWhC,KAE9BmO,EAAY,IAAMnO,EAAgBmO,IAAc,UAEpD9Y,EAAOmN,IAAIC,GAAG,aAAc,MAAQ0L,EAAY,QAUpD,GAAKK,EAKL,IAGQxO,GAAmBgC,EAAWhC,KAE9BwO,EAAY,IAAMxO,EAAgBwO,IAAc,KAEpDnZ,EAAOmN,IAAIC,GAAG,aAAc+L,GAC9B,MAAOkF,GAED1T,GAAmBgC,EAAWhC,KAE9BmO,EAAY,IAAMnO,EAAgBmO,IAAc,KAEpD9Y,EAAOmN,IAAIC,GAAG,aAAc,MAAQ0L,EAAY,aAjBhDsF,SAsBR3O,EAAUrJ,GAAG,SAAS,SAAUI,GAC5B,IAAI+E,EAAGO,SAGHtF,EAAEiX,iBAIDO,KAAL,CAKA,IAAIM,EAAajF,EAAa7S,GAC9B,GAAK8X,GAAeA,EAAW5b,OAA/B,CAKA,IAAI6M,EAAiBvP,EAAOgN,UAAUwC,4BACtC,GAAKD,EAAL,CAGA,IAAI1G,EAAW0G,EAAe3G,cAG9B,GAAiB,SAAbC,GAAoC,QAAbA,EAA3B,CAKA,IAAI8O,EAAY3X,EAAO2X,UACvBA,EAAUA,UAAU2G,WAK5BzB,WAAY,WACR,IAAI7c,EAAS3B,KAAK2B,OACdyP,EAAYzP,EAAOyP,UAEvBA,EAAUrJ,GAAG,WAAW,SAAUI,GAC9B,GAAkB,IAAdA,EAAEqX,SAGD7d,EAAOmN,IAAIoQ,sBAAsB,cAAtC,CAIA,IAAIhO,EAAiBvP,EAAOgN,UAAUwC,4BACtC,GAAKD,EAAL,CAGA,IAAI0E,EAAc1E,EAAenH,SAC7BiV,EAAoB9N,EAAe3G,cACnC0U,EAAiBrJ,EAAYrL,cAEP,SAAtByU,GAAmD,QAAnBC,EAEhCtd,EAAOmN,IAAIC,GAAG,aAAc,QAG5BpN,EAAOmN,IAAIC,GAAG,aAAc,4BAGhC5G,EAAEiX,uBAKVX,WAAY,WACR,IAAI9c,EAAS3B,KAAK2B,OACdyP,EAAYzP,EAAOyP,UAGvBA,EAAUrJ,GAAG,QAAS,OAAO,SAAUI,GACnC,IAAI+X,EAAMlgB,KACNoZ,EAAO/V,EAAE6c,GAEiB,MAA1B9G,EAAK9Q,KAAK,cAMd3G,EAAO0X,aAAeD,EAGtBzX,EAAOgN,UAAUsF,kBAAkBmF,GACnCzX,EAAOgN,UAAUM,uBAIrBmC,EAAUrJ,GAAG,gBAAgB,SAAUI,GAC/BA,EAAEpE,OAAOwB,QAAQ,SAKrB5D,EAAO0X,aAAe,UAK9BqF,YAAa,WACT,IAAI/c,EAAS3B,KAAK2B,OAGdwe,EAAY9c,EAAEyC,UAClBqa,EAAUpY,GAAG,qCAAqC,SAAUI,GACxDA,EAAEiX,oBAIN,IAAIhO,EAAYzP,EAAOyP,UACvBA,EAAUrJ,GAAG,QAAQ,SAAUI,GAC3BA,EAAEiX,iBACF,IAAIxS,EAAQzE,EAAEiY,cAAgBjY,EAAEiY,aAAaxT,MAC7C,GAAKA,GAAUA,EAAMvI,OAArB,CAKA,IAAIiV,EAAY3X,EAAO2X,UACvBA,EAAUA,UAAU1M,SAehCiP,EAAQ1W,UAAY,CAChBgC,YAAa0U,EAGb9M,GAAI,SAAatO,EAAMkK,GACnB,IAAIhJ,EAAS3B,KAAK2B,OASlB,GANKA,EAAO0e,mBACRva,SAASwa,YAAY,eAAgB,MAAM,GAC3C3e,EAAO0e,kBAAmB,GAIzB1e,EAAOgN,UAAUoP,WAAtB,CAKApc,EAAOgN,UAAUM,mBAGjB,IAAIsR,EAAQ,IAAM9f,EACdT,KAAKugB,GAELvgB,KAAKugB,GAAO5V,GAGZ3K,KAAKwgB,aAAa/f,EAAMkK,GAI5BhJ,EAAOZ,MAAMid,eAGbrc,EAAOgN,UAAUgQ,YACjBhd,EAAOgN,UAAUM,mBAGjBtN,EAAO8e,QAAU9e,EAAO8e,WAI5BC,YAAa,SAAqBvd,GAC9B,IAAIxB,EAAS3B,KAAK2B,OACdgf,EAAQhf,EAAOgN,UAAUoP,WAEzB/d,KAAKkf,sBAAsB,cAE3Blf,KAAKwgB,aAAa,aAAcrd,GACzBwd,EAAMC,YAEbD,EAAME,iBACNF,EAAMC,WAAWvd,EAAEF,GAAM,KAClBwd,EAAMG,WAEbH,EAAMG,UAAU3d,IAKxB4d,YAAa,SAAqB9V,GAC9B,IAAItJ,EAAS3B,KAAK2B,OACdgf,EAAQhf,EAAOgN,UAAUoP,WAEzB4C,EAAMC,aACND,EAAME,iBACNF,EAAMC,WAAW3V,EAAM,MAK/BuV,aAAc,SAAsB/f,EAAMkK,GACtC7E,SAASwa,YAAY7f,GAAM,EAAOkK,IAItC2G,kBAAmB,SAA2B7Q,GAC1C,OAAOqF,SAASwL,kBAAkB7Q,IAItC0O,kBAAmB,SAA2B1O,GAC1C,OAAOqF,SAASqJ,kBAAkB1O,IAItCye,sBAAuB,SAA+Bze,GAClD,OAAOqF,SAASoZ,sBAAsBze,KAe9Cqb,EAAI3W,UAAY,CACZgC,YAAa2U,EAGbiC,SAAU,WACN,OAAO/d,KAAK+b,eAIhB4C,UAAW,SAAmBqC,GAC1B,GAAIA,EAEAhhB,KAAK+b,cAAgBiF,MAFzB,CAOA,IAAIrS,EAAYjB,OAAOuT,eACvB,GAA6B,IAAzBtS,EAAUuS,WAAd,CAGA,IAAIP,EAAQhS,EAAUwS,WAAW,GAG7BC,EAAiBphB,KAAKmR,0BAA0BwP,GACpD,GAAKS,GAK0C,UAA3CA,EAAe9Y,KAAK,qBAAkC8Y,EAAevW,YAAY,2BAArF,CAIA,IAAIlJ,EAAS3B,KAAK2B,OACdyP,EAAYzP,EAAOyP,UACnBA,EAAUlH,UAAUkX,KAEpBphB,KAAK+b,cAAgB4E,OAK7B3R,cAAe,SAAuBqS,GACnB,MAAXA,IAEAA,GAAU,GAEd,IAAIV,EAAQ3gB,KAAK+b,cACb4E,GACAA,EAAMW,SAASD,IAKvBlN,iBAAkB,WACd,IAAIwM,EAAQ3gB,KAAK+b,cACjB,OAAI4E,EACO3gB,KAAK+b,cAAc5N,WAEnB,IAKfgD,0BAA2B,SAAmCwP,GAC1DA,EAAQA,GAAS3gB,KAAK+b,cACtB,IAAIzU,OAAO,EACX,GAAIqZ,EAEA,OADArZ,EAAOqZ,EAAMY,wBACNle,EAAoB,IAAlBiE,EAAKP,SAAiBO,EAAOA,EAAK+D,aAGnD+J,sBAAuB,SAA+BuL,GAClDA,EAAQA,GAAS3gB,KAAK+b,cACtB,IAAIzU,OAAO,EACX,GAAIqZ,EAEA,OADArZ,EAAOqZ,EAAMa,eACNne,EAAoB,IAAlBiE,EAAKP,SAAiBO,EAAOA,EAAK+D,aAGnDiK,oBAAqB,SAA6BqL,GAC9CA,EAAQA,GAAS3gB,KAAK+b,cACtB,IAAIzU,OAAO,EACX,GAAIqZ,EAEA,OADArZ,EAAOqZ,EAAMc,aACNpe,EAAoB,IAAlBiE,EAAKP,SAAiBO,EAAOA,EAAK+D,aAKnDuD,iBAAkB,WACd,IAAI+R,EAAQ3gB,KAAK+b,cACjB,SAAI4E,IAASA,EAAMa,gBACXb,EAAMa,iBAAmBb,EAAMc,cAC3Bd,EAAMrB,cAAgBqB,EAAMe,YAS5CzS,iBAAkB,WACd,IAAIN,EAAYjB,OAAOuT,eACvBtS,EAAUgT,kBACVhT,EAAUiT,SAAS5hB,KAAK+b,gBAI5BlN,iBAAkB,WACd,IAAIlN,EAAS3B,KAAK2B,OACdgf,EAAQ3gB,KAAK+d,WACb9S,OAAQ,EAEZ,GAAK0V,GAIA3gB,KAAK4O,mBAKV,IAEQ1B,EAAGI,YAEH3L,EAAOmN,IAAIC,GAAG,aAAc,WAE5B4R,EAAMkB,OAAOlB,EAAMc,aAAcd,EAAMe,UAAY,GAEnD1hB,KAAK2e,UAAUgC,KAEf1V,EAAQ5H,EAAE,4BACV1B,EAAOmN,IAAIC,GAAG,aAAc9D,GAC5BjL,KAAKiU,kBAAkBhJ,GAAO,IAEpC,MAAO+U,MAMb/L,kBAAmB,SAA2BhJ,EAAOoW,EAASS,GAI1D,GAAK7W,EAAM5G,OAAX,CAIA,IAAIiD,EAAO2D,EAAM,GACb0V,EAAQ7a,SAASic,cAEjBD,EACAnB,EAAMqB,mBAAmB1a,GAEzBqZ,EAAMsB,WAAW3a,GAGE,mBAAZ+Z,GACPV,EAAMW,SAASD,GAInBrhB,KAAK2e,UAAUgC,MAkBvB3E,EAAS7W,UAAY,CACjBgC,YAAa6U,EAEbzS,KAAM,SAAc2Y,GAChB,IAAIvS,EAAQ3P,KAGZ,IAAIA,KAAKkc,QAAT,CAGAlc,KAAKkc,SAAU,EAGf,IAAII,EAAOtc,KAAKsc,KAChB,GAAKtc,KAAKmc,UAINnc,KAAKmc,WAAY,MAJA,CACjB,IAAIE,EAAiBrc,KAAKqc,eAC1BA,EAAe3S,OAAO4S,GAMtBuD,KAAKD,MAAQ5f,KAAKic,MAAQ,KACtBiG,GAAY,IACZ5F,EAAKrT,IAAI,QAAoB,IAAXiZ,EAAiB,KACnCliB,KAAKic,MAAQ4D,KAAKD,OAK1B,IAAIuC,EAAYniB,KAAKoc,WACjB+F,GACAtR,aAAasR,GAEjBA,EAAYnf,YAAW,WACnB2M,EAAMyS,UACP,OAGPA,MAAO,WACH,IAAI9F,EAAOtc,KAAKsc,KAChBA,EAAKxS,SAGL9J,KAAKic,MAAQ,EACbjc,KAAKkc,SAAU,EACflc,KAAKmc,WAAY,IAIzB,IAAIkG,EAA4B,oBAAXC,QAAoD,kBAApBA,OAAOC,SAAwB,SAAU3U,GAC5F,cAAcA,GACZ,SAAUA,GACZ,OAAOA,GAAyB,oBAAX0U,QAAyB1U,EAAIzG,cAAgBmb,QAAU1U,IAAQ0U,OAAOnd,UAAY,gBAAkByI,GAQ3H,SAAS4U,EAAU7gB,GACf3B,KAAK2B,OAASA,EAIlB6gB,EAAUrd,UAAY,CAClBgC,YAAaqb,EAGbC,OAAQ,SAAgBC,EAAWC,GAC/B,IAAIhhB,EAAS3B,KAAK2B,OACdK,EAAQL,EAAO+J,OAAO1J,MACtB4gB,EAAcjhB,EAAO+J,OAAOkX,YAEhC,GAAI5gB,EACA,MAAM,IAAI6gB,MAAM,gBAAkBF,GAAaD,IAE3CE,GAAsC,oBAAhBA,EACtBA,EAAYF,GAEZ1N,MAAM0N,IAMlB1I,cAAe,SAAuB9N,GAClC,IAAI6K,EAAS/W,KAEb,GAAKkM,EAAL,CAGA,IAAIvK,EAAS3B,KAAK2B,OACd+J,EAAS/J,EAAO+J,OAGhBS,EAAeT,EAAOS,aACtB4I,OAAc,EAClB,GAAI5I,GAAwC,oBAAjBA,IACvB4I,EAAc5I,EAAaD,GACA,kBAAhB6I,GAEPC,MAAMD,OAJd,CASApT,EAAOmN,IAAIC,GAAG,aAAc,aAAe7C,EAAO,+BAGlD,IAAIgU,EAAMpa,SAASO,cAAc,OACjC6Z,EAAI4C,OAAS,WACT,IAAIC,EAAWrX,EAAOa,gBAClBwW,GAAgC,oBAAbA,GACnBA,EAAS7W,GAGbgU,EAAM,MAEVA,EAAI8C,QAAU,WACV9C,EAAM,KAENnJ,EAAO0L,OAAO,SAAU,6BAA2FvW,EAAO,cAG9HgU,EAAI+C,QAAU,WACV/C,EAAM,MAEVA,EAAIlU,IAAME,KAIdoN,UAAW,SAAmB1M,GAC1B,IAAIsW,EAASljB,KAEb,GAAK4M,GAAUA,EAAMvI,OAArB,CAKA,IAAI1C,EAAS3B,KAAK2B,OACd+J,EAAS/J,EAAO+J,OAChB5J,EAAkB4J,EAAO5J,gBACzBC,EAAsB2J,EAAO3J,oBAE7BohB,EAAUzX,EAAOjJ,iBACjB2gB,EAAWD,EAAU,KAAO,KAC5BE,EAAY3X,EAAOlJ,oBAAsB,IACzCD,EAAiBmJ,EAAOnJ,gBAAkB,GAC1CG,EAAkBgJ,EAAOhJ,iBAAmB,GAC5C4gB,EAAyB5X,EAAO4X,uBAChC9W,EAAmBd,EAAOc,kBAAoB,GAC9C+W,EAAQ7X,EAAO/I,gBAAkB,GACjCqK,EAAUtB,EAAOgB,kBAAoB,IACrCD,EAAkBf,EAAOe,gBACN,MAAnBA,IACAA,GAAkB,GAEtB,IAAIyN,EAAkBxO,EAAOwO,gBAE7B,GAAKA,GAEIpY,GAAoBC,EAF7B,CAQA,IAAIyhB,EAAc,GACdC,EAAU,GAyBd,GAxBA5V,EAAWjB,GAAO,SAAU8W,GACxB,IAAIjjB,EAAOijB,EAAKjjB,KACZkjB,EAAOD,EAAKC,KAGXljB,GAASkjB,KAIuC,IAAjD,kCAAkCnW,KAAK/M,GAKvC0iB,EAAUQ,EAEVF,EAAQ/b,KAAK,IAAWjH,EAAO,OAAwB2iB,EAAW,KAKtEI,EAAY9b,KAAKgc,GAVbD,EAAQ/b,KAAK,IAAWjH,EAAO,aAanCgjB,EAAQpf,OACRrE,KAAKyiB,OAAO,cAAgBgB,EAAQ1a,KAAK,YAG7C,GAAIya,EAAYnf,OAASgf,EACrBrjB,KAAKyiB,OAAO,SAAWY,EAAY,YAKvC,GAAInJ,GAA8C,oBAApBA,EAC1BA,EAAgBsJ,EAAaxjB,KAAKga,cAAc4J,KAAK5jB,WADzD,CAQA,IAAI6jB,EAAW,IAAIC,SAOnB,GANAjW,EAAW2V,GAAa,SAAUE,GAC9B,IAAIjjB,EAAO8B,GAAkBmhB,EAAKjjB,KAClCojB,EAASna,OAAOjJ,EAAMijB,MAItB5hB,GAA8C,kBAApBA,EAA8B,CAExD,IAAIiiB,EAAqBjiB,EAAgBmG,MAAM,KAC/CnG,EAAkBiiB,EAAmB,GACrC,IAAIC,EAAsBD,EAAmB,IAAM,GACnDpW,EAAWjL,GAAiB,SAAU6F,EAAKC,GAKnC8a,IACIxhB,EAAgBK,QAAQ,KAAO,EAC/BL,GAAmB,IAEnBA,GAAmB,IAEvBA,EAAkBA,EAAkByG,EAAM,IAAMC,GAIpDqb,EAASna,OAAOnB,EAAKC,MAErBwb,IACAliB,GAAmB,IAAMkiB,GAI7B,IAAIrX,EAAM,IAAIsX,eAqFd,GApFAtX,EAAIuX,KAAK,OAAQpiB,GAGjB6K,EAAIK,QAAUA,EACdL,EAAIwX,UAAY,WAERZ,EAAMvW,SAAoC,oBAAlBuW,EAAMvW,SAC9BuW,EAAMvW,QAAQL,EAAKhL,GAGvBuhB,EAAOT,OAAO,WAId9V,EAAIyX,SACJzX,EAAIyX,OAAOC,WAAa,SAAUlc,GAC9B,IAAImc,OAAU,EAEVC,EAAc,IAAIvI,EAASra,GAC3BwG,EAAEqc,mBACFF,EAAUnc,EAAEsc,OAAStc,EAAEuc,MACvBH,EAAYhb,KAAK+a,MAM7B3X,EAAIgY,mBAAqB,WACrB,IAAI/d,OAAS,EACb,GAAuB,IAAnB+F,EAAIiY,WAAkB,CACtB,GAAIjY,EAAIkY,OAAS,KAAOlY,EAAIkY,QAAU,IAQlC,OANItB,EAAMxW,OAAgC,oBAAhBwW,EAAMxW,OAC5BwW,EAAMxW,MAAMJ,EAAKhL,QAIrBuhB,EAAOT,OAAO,WAAY,qBAA4G9V,EAAIkY,QAK9I,GADAje,EAAS+F,EAAImY,aAC2D,YAAjD,qBAAXle,EAAyB,YAAcyb,EAAQzb,IACvD,IACIA,EAASme,KAAKC,MAAMpe,GACtB,MAAOoZ,GAOL,OALIuD,EAAMzW,MAA8B,oBAAfyW,EAAMzW,MAC3ByW,EAAMzW,KAAKH,EAAKhL,EAAQiF,QAG5Bsc,EAAOT,OAAO,SAAU,qBAAuB7b,GAIvD,GAAK2c,EAAM1gB,cAAgC,KAAhB+D,EAAOqe,MAQ3B,CACH,GAAI1B,EAAM1gB,cAA8C,oBAAvB0gB,EAAM1gB,aAEnC0gB,EAAM1gB,aAAaqgB,EAAOlJ,cAAc4J,KAAKV,GAAStc,EAAQjF,OAC3D,CAEH,IAAIL,EAAOsF,EAAOtF,MAAQ,GAC1BA,EAAK8F,SAAQ,SAAU8E,GACnBgX,EAAOlJ,cAAc9N,MAKzBqX,EAAM1W,SAAoC,oBAAlB0W,EAAM1W,SAC9B0W,EAAM1W,QAAQF,EAAKhL,EAAQiF,QApB3B2c,EAAMzW,MAA8B,oBAAfyW,EAAMzW,MAC3ByW,EAAMzW,KAAKH,EAAKhL,EAAQiF,GAI5Bsc,EAAOT,OAAO,SAAU,yBAA2B7b,EAAOqe,SAsBlE1B,EAAM3gB,QAAkC,oBAAjB2gB,EAAM3gB,OAAuB,CACpD,IAAIsiB,EAAe3B,EAAM3gB,OAAO+J,EAAKhL,EAAQ6hB,GAC7C,GAAI0B,GAAgG,YAAvD,qBAAjBA,EAA+B,YAAc7C,EAAQ6C,KACzEA,EAAaC,QAGb,YADAnlB,KAAKyiB,OAAOyC,EAAaE,KAkBrC,OAXAzX,EAAWnB,GAAkB,SAAUjE,EAAKC,GACxCmE,EAAI0Y,iBAAiB9c,EAAKC,MAI9BmE,EAAIF,gBAAkBA,OAGtBE,EAAI2Y,KAAKzB,GAOT9hB,GACA8L,EAAWjB,GAAO,SAAU8W,GACxB,IAAI/T,EAAQuT,EACRqC,EAAS,IAAIpL,WACjBoL,EAAOC,cAAc9B,GACrB6B,EAAOzC,OAAS,WACZnT,EAAMqK,cAAcha,KAAK4G,iBAY7C,IAAI6e,EAAW,EAGf,SAASC,EAAOC,EAAiBC,GAC7B,GAAuB,MAAnBD,EAEA,MAAM,IAAI9C,MAAM,4BAGpB7iB,KAAKO,GAAK,cAAgBklB,IAE1BzlB,KAAK2lB,gBAAkBA,EACvB3lB,KAAK4lB,aAAeA,EAGpB5lB,KAAK4B,aAAe,GAIxB8jB,EAAOvgB,UAAY,CACfgC,YAAaue,EAGbG,YAAa,WAET,IAAI9hB,EAAS,GACb/D,KAAK0L,OAASvK,OAAOyD,OAAOb,EAAQ2H,EAAQ1L,KAAK4B,cAGjD,IAAIkkB,EAAa9lB,KAAK0L,OAAOqa,MAAQ,GACjCzW,EAAW,GACf3B,EAAWmY,GAAY,SAAUvd,EAAKC,GAGlC8G,EAAS5H,KAAK,CACV6F,IAAK,IAAIyY,OAAOzd,EAAK,OACrBC,IAAKA,OAIbxI,KAAK0L,OAAO4D,SAAWA,GAI3B2W,SAAU,WACN,IAAItW,EAAQ3P,KAER2lB,EAAkB3lB,KAAK2lB,gBACvBO,EAAmB7iB,EAAEsiB,GACrBC,EAAe5lB,KAAK4lB,aAEpBO,EAAYnmB,KAAK0L,OACjBtK,EAAS+kB,EAAU/kB,OAGnB0c,OAAe,EACfjL,OAAqB,EACrBzB,OAAY,EACZzH,OAAY,EAEI,MAAhBic,GAEA9H,EAAeza,EAAE,eACjBwP,EAAqBxP,EAAE,eAGvBsG,EAAYuc,EAAiB3f,WAG7B2f,EAAiBxc,OAAOoU,GAAcpU,OAAOmJ,GAG7CiL,EAAa7U,IAAI,mBAAoB,WAAWA,IAAI,SAAU,kBAC9D4J,EAAmB5J,IAAI,SAAU,kBAAkBA,IAAI,aAAc,QAAQA,IAAI,SAAU,WAG3F6U,EAAeoI,EACfrT,EAAqBxP,EAAEuiB,GAEvBjc,EAAYkJ,EAAmBtM,YAInC6K,EAAY/N,EAAE,eACd+N,EAAU9I,KAAK,kBAAmB,QAAQW,IAAI,QAAS,QAAQA,IAAI,SAAU,QAGzEU,GAAaA,EAAUtF,OACvB+M,EAAU1H,OAAOC,GAEjByH,EAAU1H,OAAOrG,EAAE,gBAIvBwP,EAAmBnJ,OAAO0H,GAG1B0M,EAAanV,SAAS,eACtBkK,EAAmBlK,SAAS,sBAC5BkK,EAAmB5J,IAAI,UAAW7H,GAClCgQ,EAAUzI,SAAS,YAGnB,IAAIyd,EAAgBrY,EAAU,gBAC9B+P,EAAaxV,KAAK,KAAM8d,GACxB,IAAIC,EAAatY,EAAU,aAC3BqD,EAAU9I,KAAK,KAAM+d,GAGrBrmB,KAAK8d,aAAeA,EACpB9d,KAAK6S,mBAAqBA,EAC1B7S,KAAKoR,UAAYA,EACjBpR,KAAKomB,cAAgBA,EACrBpmB,KAAKqmB,WAAaA,EAGlB,IAAIC,GAAiB,EACrBzT,EAAmB9K,GAAG,oBAAoB,WAEtCue,GAAiB,KAErBzT,EAAmB9K,GAAG,kBAAkB,WAEpCue,GAAiB,KAIrBzT,EAAmB9K,GAAG,eAAe,WAEjCue,GAAkB3W,EAAM8Q,QAAU9Q,EAAM8Q,YAE5C3C,EAAa/V,GAAG,SAAS,WACrB/H,KAAKygB,QAAUzgB,KAAKygB,aAIpB0F,EAAU9jB,SAAW8jB,EAAU7jB,UAE/BtC,KAAKumB,SAAU,EAEfljB,EAAEyC,UAAUiC,GAAG,SAAS,SAAUI,GAE9B,IAAIqe,EAAUpV,EAAUlH,UAAU7G,EAAE8E,EAAEpE,SAGlC0iB,EAAY3I,EAAa5T,UAAU7G,EAAE8E,EAAEpE,SACvC2iB,EAAS5I,EAAa,IAAM3V,EAAEpE,OAElC,GAAKyiB,EAWI7W,EAAM4W,SACP5W,EAAMtN,SAAWsN,EAAMtN,UAE3BsN,EAAM4W,SAAU,MAdN,CAEV,GAAIE,IAAcC,EACd,OAGA/W,EAAM4W,SACN5W,EAAMrN,QAAUqN,EAAMrN,SAE1BqN,EAAM4W,SAAU,QAYhCI,aAAc,WACV3mB,KAAK8O,IAAM,IAAI+M,EAAQ7b,OAI3B4mB,kBAAmB,WACf5mB,KAAK2O,UAAY,IAAImN,EAAI9b,OAI7B6mB,eAAgB,WACZ7mB,KAAKsZ,UAAY,IAAIkJ,EAAUxiB,OAInC8mB,WAAY,WACR9mB,KAAKe,MAAQ,IAAIsZ,EAAMra,MACvBA,KAAKe,MAAMyc,QAIfuJ,UAAW,WACP/mB,KAAKkD,IAAM,IAAI0Y,EAAK5b,MACpBA,KAAKkD,IAAIsa,QAIbU,cAAe,SAAuB8I,GAClC,IAAI5V,EAAYpR,KAAKoR,UACjBzH,EAAYyH,EAAU7K,WAC1B,IAAKoD,EAAUtF,OAIX,OAFA+M,EAAU1H,OAAOrG,EAAE,qBACnBrD,KAAKke,gBAIT,IAAI+I,EAAQtd,EAAU7B,OAEtB,GAAIkf,EAAS,CAET,IAAI7jB,EAAO8jB,EAAM9jB,OAAOwV,cACpBnO,EAAWyc,EAAM1c,cACrB,GAAa,SAATpH,GAA4B,UAATA,GAAkC,MAAbqH,EAIxC,OAFA4G,EAAU1H,OAAOrG,EAAE,qBACnBrD,KAAKke,gBAKble,KAAK2O,UAAUsF,kBAAkBgT,GAAO,GAAO,GAC/CjnB,KAAK2O,UAAUM,oBAInB4O,WAAY,WAER,IAAIqJ,EAAoB,EACpBC,EAAmBnnB,KAAKkD,IAAIC,OAC5BgjB,EAAYnmB,KAAK0L,OAGjB0b,EAAkBjB,EAAUiB,gBAChCA,EAAkBzQ,SAASyQ,EAAiB,MACvCA,GAAmBA,GAAmB,KACvCA,EAAkB,KAGtB,IAAIhlB,EAAW+jB,EAAU/jB,SACrBA,GAAgC,oBAAbA,IAKnBpC,KAAKygB,OAAS,WAEV,IAAI4G,EAAcrnB,KAAKkD,IAAIC,OAEvBkkB,EAAYhjB,SAAW8iB,EAAiB9iB,QAEpCgjB,IAAgBF,IAMpBD,GACArW,aAAaqW,GAEjBA,EAAoBlkB,YAAW,WAE3BZ,EAASilB,GACTF,EAAmBE,IACpBD,MAKX,IAAI9kB,EAAS6jB,EAAU7jB,OACnBA,GAA4B,oBAAXA,IACjBtC,KAAKsC,OAAS,WACV,IAAI+kB,EAAcrnB,KAAKkD,IAAIC,OAC3Bb,EAAO+kB,KAKf,IAAIhlB,EAAU8jB,EAAU9jB,QACpBA,GAA8B,oBAAZA,IAClBrC,KAAKqC,QAAU,WACXA,OAMZY,OAAQ,WAEJjD,KAAK6lB,cAGL7lB,KAAKimB,WAGLjmB,KAAK2mB,eAGL3mB,KAAK4mB,oBAGL5mB,KAAK+mB,YAGL/mB,KAAK8mB,aAGL9mB,KAAK6mB,iBAGL7mB,KAAKke,eAAc,GAGnBle,KAAK6d,cAITyJ,aAAc,WACVjkB,EAAEoI,WAKV,IACI3F,SACF,MAAOka,IACL,MAAM,IAAI6C,MAAM,cAIpBle,IAGA,IAAI4iB,GAAY,68gBAGZpe,GAAQrD,SAASO,cAAc,SACnC8C,GAAMxI,KAAO,WACbwI,GAAM7C,UAAYihB,GAClBzhB,SAAS0hB,qBAAqB,QAAQthB,KAAK,GAAG2D,YAAYV,IAG1D,IAAInE,GAAQ0I,OAAO+Z,YAAc/B,EAEjC,OAAO1gB,O,2DC/jJP,yBAAiuB,EAAG","file":"js/chunk-4b0564ea.d1b0442a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"editor\",attrs:{\"id\":_vm.id}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- 全局的富文本编辑器 -->\n<template>\n  <div class=\"editor\" :id=\"id\" />\n</template>\n\n<script>\nimport E from 'wangeditor';\nexport default {\n  name: 'Editor',\n  props: {\n    // 避免同一页面有两个地方有 editor 而造成有相同的ID\n    id: {\n      type: String,\n      default: 'editor'\n    },\n    // 初始文本，可接受带标签的形式\n    defaultText: {\n      type: String,\n      default: ''\n    },\n    // 额外添加菜单\n    menus: {\n      type: Array,\n      default: () => []\n    },\n    // 图片上传服务器地址\n    uploadPath: {\n      type: String,\n      default: '/api/upload'\n    },\n    // 自定义上传参数\n    params: {\n      type: Object,\n      default: null\n    },\n    // editor 的 zIndex，默认 100\n    zIndex: {\n      type: Number,\n      default: 100\n    }\n  },\n  data () {\n    return {\n      // 固定的菜单配置\n      fixedMunes: [\n        'head', // 标题\n        'bold', // 粗体\n        'fontSize', // 字号\n        'fontName', // 字体\n        'italic', // 斜体\n        'underline', // 下划线\n        'strikeThrough', // 删除线\n        'foreColor', // 文字颜色\n        'backColor', // 背景颜色\n        'justify', // 对齐方式\n        'undo', // 撤销\n        'redo', // 重复\n        'image',\n        'code'\n      ],\n      // 自定义字体\n      fontNames: [\n        '宋体',\n        '微软雅黑',\n        'Arial',\n        'Tahoma',\n        'Verdana'\n      ]\n    };\n  },\n  methods: {},\n  mounted () {\n    this.editor = new E(`#${this.id}`);\n\n    // 自定义菜单配置\n    this.editor.customConfig.menus = [...this.fixedMunes, ...this.menus];\n\n    // 隐藏“网络图片”tab\n    this.editor.customConfig.showLinkImg = false;\n    // 有上传服务器的地址则以图片形式保存，没有则以 base64 的形式保存\n    if (this.uploadPath) {\n      // 图片上传服务器地址\n      this.editor.customConfig.uploadImgServer = this.uploadPath;\n    } else {\n      this.editor.customConfig.uploadImgShowBase64 = true;\n    }\n    // 通过 url 参数配置 debug 模式\n    this.editor.customConfig.debug = location.href.indexOf('wangeditor_debug_mode=1') > 0;\n\n    // editor 改变时\n    this.editor.customConfig.onchange = () => {\n      this.$emit('editorChange', this.editor);\n    };\n\n    // editor 获取焦点\n    this.editor.customConfig.onfocus = () => {\n      this.$emit('editorFocus', this.editor);\n    };\n\n    // editor 失焦\n    this.editor.customConfig.onblur = () => {\n      this.$emit('editorBlur', this.editor);\n    };\n\n    // 自定义字体\n    this.editor.customConfig.fontNames = this.fontNames;\n\n    this.editor.customConfig.uploadFileName = 'file';\n\n    // 限制单次上传个数\n    this.editor.customConfig.uploadImgMaxLength = 1;\n\n    // 将图片大小限制为 1M\n    this.editor.customConfig.uploadImgMaxSize = 1 * 1024 * 1024;\n\n    // 自定义上传参数\n    this.editor.customConfig.uploadImgParams = this.params;\n\n    // 上传图片监控函数\n    this.editor.customConfig.uploadImgHooks = {\n      // 图片上传之前触发\n      before: (xhr, editor, files) => {\n        // this.SETGLOBALMASK({ loading: true, text: '图片上传中...' });\n      },\n      // 如果服务器端返回的不是 {errno:0, data: [...]} 这种格式，可使用该配置\n      // 但是，服务器端返回的必须是一个 JSON 格式字符串！！！否则会报错\n      customInsert: (insertImg, result, editor) => {\n        const url = result.result.url;\n        insertImg(url);\n        setTimeout(() => {\n          // this.SETGLOBALMASK({ loading: false });\n        }, 300);\n      }\n    };\n\n    // 启动 editor\n    this.editor.create();\n\n    // 设置 editor 初始化文本\n    this.editor.txt.html(this.defaultText);\n\n    // editor 的 zIndex\n    this.editor.customConfig.zIndex = this.zIndex;\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.editor {\n  display: flex;\n  height: 100%;\n  min-width: 440px;\n  flex-direction: column;\n  /deep/.w-e-text-container {\n    flex: 1;\n    .w-e-text {\n      overflow: auto;\n      pre, code {\n        overflow: auto;\n      }\n    }\n    img {\n      width: 300px !important;\n      display: block;\n      margin: 5px 0;\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.8.3@vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.8.3@vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Editor.vue?vue&type=template&id=117c7a7a&scoped=true&\"\nimport script from \"./Editor.vue?vue&type=script&lang=js&\"\nexport * from \"./Editor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Editor.vue?vue&type=style&index=0&id=117c7a7a&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/_vue-loader@15.8.3@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"117c7a7a\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $indexOf = require('../internals/array-includes').indexOf;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar nativeIndexOf = [].indexOf;\n\nvar NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;\nvar STRICT_METHOD = arrayMethodIsStrict('indexOf');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.indexOf` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD || !USES_TO_LENGTH }, {\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? nativeIndexOf.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // clone\n    clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n            cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                });\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                });\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.childNodes);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n};\n\n// new 一个对象\nfunction $(selector) {\n    return new DomElement(selector);\n}\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n};\n\n// 遍历对象\nfunction objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n}\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\nfunction isFunction(fn) {\n    return typeof fn === 'function';\n}\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    替换多语言\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $li.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - fontSize\n*/\n\n// 构造函数\nfunction FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>字号</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span style=\"font-size: x-small;\">x-small</span>'), value: '1' }, { $elem: $('<span style=\"font-size: small;\">small</span>'), value: '2' }, { $elem: $('<span>normal</span>'), value: '3' }, { $elem: $('<span style=\"font-size: large;\">large</span>'), value: '4' }, { $elem: $('<span style=\"font-size: x-large;\">x-large</span>'), value: '5' }, { $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontSize 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontSize.prototype = {\n    constructor: FontSize,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontSize', value);\n    }\n};\n\n/*\n    menu - fontName\n*/\n\n// 构造函数\nfunction FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 获取配置的字体\n    var config = editor.config;\n    var fontNames = config.fontNames || [];\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>字体</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: fontNames.map(function (fontName) {\n            return { $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'), value: fontName };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontName 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontName.prototype = {\n    constructor: FontName,\n\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontName', value);\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - Forecolor\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - BackColor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                editor.cmd.do('formatBlock', '<P>');\n            } else {\n                // 转换为 quote\n                editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            }\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n        var content = void 0,\n            $targetELem = void 0;\n        if (nodeName === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config;\n        // 获取表情配置\n        var emotions = config.emotions || [];\n\n        // 创建表情 dropPanel 的配置\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n            var emotType = emotData.type;\n            var content = emotData.content || [];\n\n            // 这一组表情最终拼接出来的 html\n            var faceHtml = '';\n\n            // emoji 表情\n            if (emotType === 'emoji') {\n                content.forEach(function (item) {\n                    if (item) {\n                        faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                    }\n                });\n            }\n            // 图片表情\n            if (emotType === 'image') {\n                content.forEach(function (item) {\n                    var src = item.src;\n                    var alt = item.alt;\n                    if (src) {\n                        // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                        faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                    }\n                });\n            }\n\n            tabConfig.push({\n                title: emotData.title,\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        var $target = $(target);\n                        var nodeName = $target.getNodeName();\n\n                        var insertHtml = void 0;\n                        if (nodeName === 'IMG') {\n                            // 插入图片\n                            insertHtml = $target.parent().html();\n                        } else {\n                            // 插入 emoji\n                            insertHtml = '<span>' + $target.html() + '</span>';\n                        }\n\n                        _this._insert(insertHtml);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            });\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: tabConfig\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }]\n        } // second tab end\n        ]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.fontSize = FontSize;\n\nMenuConstructors.fontName = FontName;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n    // 过滤 data-xxx 属性\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n        // 忽略图片\n        pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n            elemResult = replaceHtmlSymbol(elemResult);\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var html = void 0;\n        if (val == null) {\n            html = $textElem.html();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            html = html.replace(/\\u200b/gm, '');\n            return html;\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 JSON\n    getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var text = void 0;\n        if (val == null) {\n            text = $textElem.text();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            text = text.replace(/\\u200b/gm, '');\n            return text;\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n\n            if ($parentElem.html() === '<code><br></code>') {\n                // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                // 而且继续回车跳不出去，因此只能特殊处理\n                insertEmptyP($selectionElem);\n                return;\n            }\n\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var ignoreImg = config.pasteIgnoreImg;\n        var $textElem = editor.$textElem;\n\n        // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n        var pasteTime = 0;\n        function canDo() {\n            var now = Date.now();\n            var flag = false;\n            if (now - pasteTime >= 100) {\n                // 间隔大于 100 ms ，可以执行\n                flag = true;\n            }\n            pasteTime = now;\n            return flag;\n        }\n        function resetTime() {\n            pasteTime = 0;\n        }\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                // 没有内容，可继续执行下面的图片粘贴\n                resetTime();\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                }\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            if ($img.attr('data-w-e') === '1') {\n                // 是表情图片，忽略\n                return;\n            }\n\n            // 记录当前点击过的图片\n            editor._selectedImg = $img;\n\n            // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n            editor.selection.createRangeByElem($img);\n            editor.selection.restoreSelection();\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 删除记录\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 使用 styleWithCSS\n        if (!editor._useStyleWithCSS) {\n            document.execCommand('styleWithCSS', null, true);\n            editor._useStyleWithCSS = true;\n        }\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n\n        // 判断选区内容是否在不可编辑区域之内\n        if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n            return;\n        }\n\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    上传进度条\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n\n        // 校验格式\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult = void 0;\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n            checkResult = linkImgCheck(link);\n            if (typeof checkResult === 'string') {\n                // 校验失败，提示信息\n                alert(checkResult);\n                return;\n            }\n        }\n\n        editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1024 / 1024;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n            // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n            if (!uploadImgServer && !uploadImgShowBase64) {\n                return;\n            }\n        }\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n                // val = encodeURIComponent(val)\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgParamsWithUrl) {\n                    if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n                }\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 记录输入法的开始和结束\n        var compositionEnd = true;\n        $textContainerElem.on('compositionstart', function () {\n            // 输入法开始输入\n            compositionEnd = false;\n        });\n        $textContainerElem.on('compositionend', function () {\n            // 输入法结束输入\n            compositionEnd = true;\n        });\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            // 输入法结束才出发 onchange\n            compositionEnd && _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 onfocus 与 onblur 事件\n        if (config$$1.onfocus || config$$1.onblur) {\n            // 当前编辑器是否是焦点状态\n            this.isFocus = false;\n\n            $(document).on('click', function (e) {\n                //判断当前点击元素是否在编辑器内\n                var isChild = $textElem.isContain($(e.target));\n\n                //判断当前点击元素是否为工具栏\n                var isToolbar = $toolbarElem.isContain($(e.target));\n                var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n                if (!isChild) {\n                    //若为选择工具栏中的功能，则不视为成blur操作\n                    if (isToolbar && !isMenu) {\n                        return;\n                    }\n\n                    if (_this.isFocus) {\n                        _this.onblur && _this.onblur();\n                    }\n                    _this.isFocus = false;\n                } else {\n                    if (!_this.isFocus) {\n                        _this.onfocus && _this.onfocus();\n                    }\n                    _this.isFocus = true;\n                }\n            });\n        }\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n\n        // onchange 触发延迟时间\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n            onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    // 需要比较每一个字符\n                    if (currentHtml === beforeChangeHtml) {\n                        return;\n                    }\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, onchangeTimeout);\n            };\n        }\n\n        // -------- 绑定 onblur 事件 --------\n        var onblur = config$$1.onblur;\n        if (onblur && typeof onblur === 'function') {\n            this.onblur = function () {\n                var currentHtml = this.txt.html();\n                onblur(currentHtml);\n            };\n        }\n\n        // -------- 绑定 onfocus 事件 --------\n        var onfocus = config$$1.onfocus;\n        if (onfocus && typeof onfocus === 'function') {\n            this.onfocus = function () {\n                onfocus();\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n        $.offAll();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n","import mod from \"-!../../../../node_modules/_mini-css-extract-plugin@0.8.2@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/_css-loader@3.4.2@css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/_vue-loader@15.8.3@vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.8.3@vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=style&index=0&id=117c7a7a&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/_mini-css-extract-plugin@0.8.2@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/_css-loader@3.4.2@css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/_vue-loader@15.8.3@vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.8.3@vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=style&index=0&id=117c7a7a&lang=scss&scoped=true&\""],"sourceRoot":""}